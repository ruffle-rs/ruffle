SWF8

[Transform.as debug-22403-05c7ba106]
PASSED: Transform.prototype.hasOwnProperty("matrix") [./Transform.as:43]
PASSED: Transform.prototype.hasOwnProperty("concatenatedMatrix") [./Transform.as:44]
PASSED: Transform.prototype.hasOwnProperty("colorTransform") [./Transform.as:45]
PASSED: Transform.prototype.hasOwnProperty("concatenatedColorTransform") [./Transform.as:46]
PASSED: Transform.prototype.hasOwnProperty("pixelBounds") [./Transform.as:47]
PASSED: t == undefined [./Transform.as:51]
PASSED: t == undefined [./Transform.as:54]
PASSED: typeOf(t) == "object" [./Transform.as:58]
PASSED: t instanceOf Transform [./Transform.as:59]
PASSED: typeOf(t) == "object" [./Transform.as:62]
PASSED: t instanceOf Transform [./Transform.as:63]
PASSED: t.matrix instanceOf Matrix [./Transform.as:65]
PASSED: t.concatenatedMatrix instanceOf Matrix [./Transform.as:66]
PASSED: t.colorTransform instanceOf ColorTransform [./Transform.as:67]
PASSED: t.concatenatedColorTransform instanceOf ColorTransform [./Transform.as:68]
PASSED: t.pixelBounds instanceOf Rectangle [./Transform.as:69]
PASSED: t.matrix.toString() == "(a=1, b=0, c=0, d=1, tx=0, ty=0)" [./Transform.as:71]
PASSED: t.colorTransform.toString() == "(redMultiplier=1, greenMultiplier=1, blueMultiplier=1, alphaMultiplier=1, redOffset=0, greenOffset=0, blueOffset=0, alphaOffset=0)" [./Transform.as:72]
PASSED: t.concatenatedColorTransform.toString() == "(redMultiplier=1, greenMultiplier=1, blueMultiplier=1, alphaMultiplier=1, redOffset=0, greenOffset=0, blueOffset=0, alphaOffset=0)" [./Transform.as:73]
PASSED: mcx.transform.colorTransform.toString() == "(redMultiplier=1, greenMultiplier=1, blueMultiplier=1, alphaMultiplier=1, redOffset=0, greenOffset=0, blueOffset=0, alphaOffset=0)" [./Transform.as:81]
PASSED: mcx.transform.colorTransform.toString() == "(redMultiplier=1, greenMultiplier=1, blueMultiplier=1, alphaMultiplier=0.2265625, redOffset=0, greenOffset=0, blueOffset=0, alphaOffset=0)" [./Transform.as:84]
PASSED: mcx.transform.colorTransform.toString() == "(redMultiplier=1, greenMultiplier=1, blueMultiplier=1, alphaMultiplier=-2.02734375, redOffset=0, greenOffset=0, blueOffset=0, alphaOffset=0)" [./Transform.as:87]
PASSED: mcx.transform.colorTransform.toString() == "(redMultiplier=1, greenMultiplier=1, blueMultiplier=1, alphaMultiplier=-0.98828125, redOffset=0, greenOffset=0, blueOffset=0, alphaOffset=0)" [./Transform.as:90]
FAILED: expected: "(redMultiplier=1, greenMultiplier=1, blueMultiplier=1, alphaMultiplier=-128, redOffset=0, greenOffset=0, blueOffset=0, alphaOffset=0)" obtained: (redMultiplier=1, greenMultiplier=1, blueMultiplier=1, alphaMultiplier=-126, redOffset=0, greenOffset=0, blueOffset=0, alphaOffset=0) [./Transform.as:93]
PASSED: mcx.transform.colorTransform.toString() == "(redMultiplier=2, greenMultiplier=3, blueMultiplier=4, alphaMultiplier=5, redOffset=5, greenOffset=-5, blueOffset=5, alphaOffset=-5)" [./Transform.as:97]
PASSED: mcx.transform.colorTransform.toString() == "(redMultiplier=0, greenMultiplier=1, blueMultiplier=1, alphaMultiplier=1, redOffset=0, greenOffset=0, blueOffset=255, alphaOffset=0)" [./Transform.as:101]
FAILED: expected: "(redMultiplier=0, greenMultiplier=-128, blueMultiplier=-128, alphaMultiplier=-128, redOffset=-32768, greenOffset=-32768, blueOffset=255, alphaOffset=-32768)" obtained: (redMultiplier=0, greenMultiplier=-59, blueMultiplier=64, alphaMultiplier=-98, redOffset=-22962, greenOffset=21258, blueOffset=255, alphaOffset=6784) [./Transform.as:105]
PASSED: t.matrix == undefined [./Transform.as:110]
PASSED: t.colorTransform.toString() == "(redMultiplier=1, greenMultiplier=1, blueMultiplier=1, alphaMultiplier=1, redOffset=0, greenOffset=0, blueOffset=0, alphaOffset=0)" [./Transform.as:111]
PASSED: t.colorTransform == undefined [./Transform.as:113]
PASSED: t.pixelBounds instanceOf Rectangle [./Transform.as:114]
PASSED: t.pixelBounds == undefined [./Transform.as:116]
PASSED: t.matrix.toString() == "(a=1, b=0, c=0, d=1, tx=0, ty=0)" [./Transform.as:120]
PASSED: t.colorTransform == undefined [./Transform.as:121]
PASSED: t.colorTransform.toString() == "(redMultiplier=1, greenMultiplier=1, blueMultiplier=1, alphaMultiplier=1, redOffset=0, greenOffset=0, blueOffset=0, alphaOffset=0)" [./Transform.as:123]
PASSED: t.pixelBounds instanceOf Rectangle [./Transform.as:125]
PASSED: mc.transform instanceOf Transform [./Transform.as:128]
PASSED: mc.transform.matrix instanceOf Matrix [./Transform.as:129]
PASSED: mc.transform.matrix.toString() == "(a=1, b=0, c=0, d=1, tx=0, ty=0)" [./Transform.as:130]
PASSED: mc.transform.matrix.toString() == "(a=1, b=0, c=0, d=1, tx=4, ty=0)" [./Transform.as:139]
PASSED: trans.matrix.toString() == "(a=1, b=0, c=0, d=1, tx=4, ty=0)" [./Transform.as:140]
PASSED: mat.toString() == "(a=1, b=0, c=0, d=1, tx=0, ty=0)" [./Transform.as:141]
PASSED: mc.transform.matrix.toString() == trans.matrix.toString() [./Transform.as:145]
PASSED: Math.round(trans.matrix.b * 10000) == 262 [./Transform.as:146]
PASSED: mat.toString() == "(a=1, b=0, c=0, d=1, tx=0, ty=0)" [./Transform.as:147]
PASSED: mc.transform.matrix.toString() == trans.matrix.toString() [./Transform.as:152]
PASSED: Math.round(trans.matrix.a * 1000) == 1000 [./Transform.as:153]
PASSED: mat.toString() == "(a=1, b=0, c=0, d=1, tx=0, ty=0)" [./Transform.as:154]
PASSED: Math.round(mc.transform.matrix.b * 10000) == 262 [./Transform.as:158]
PASSED: Math.round(mc2.transform.matrix.b * 10000) == 262 [./Transform.as:162]
PASSED: mc.transform.matrix.toString() == undefined [./Transform.as:163]
PASSED: mc2.transform.matrix.toString() == trans.matrix.toString() [./Transform.as:164]
PASSED: mat.toString() == "(a=1, b=0, c=0, d=1, tx=0, ty=0)" [./Transform.as:165]
PASSED: mc2._xscale == 100 [./Transform.as:167]
PASSED: mc2._yscale == 100 [./Transform.as:168]
PASSED: mc2._rotation == 1.5 [./Transform.as:169]
PASSED: trans.matrix.toString() == "(a=2, b=0, c=0, d=2, tx=10, ty=11)" [./Transform.as:172]
PASSED: mc2.transform.matrix.toString() == "(a=2, b=0, c=0, d=2, tx=10, ty=11)" [./Transform.as:173]
PASSED: mc2._xscale == 100 [./Transform.as:175]
PASSED: mc2._yscale == 100 [./Transform.as:176]
PASSED: mc2._rotation == 1.5 [./Transform.as:177]
PASSED: mc2.transform.matrix.toString() == undefined [./Transform.as:181]
PASSED: trans.matrix.toString() == "(a=2, b=0, c=0, d=2, tx=10, ty=11)" [./Transform.as:182]
PASSED: mat.toString() == "(a=1, b=0, c=0, d=1, tx=0, ty=0)" [./Transform.as:183]
PASSED: trans.matrix.toString() == "(a=2, b=0, c=0, d=2, tx=10, ty=11)" [./Transform.as:187]
PASSED: trans.matrix.toString() == "(a=1, b=0, c=0, d=1, tx=0, ty=0)" [./Transform.as:191]
PASSED: mc.transform.matrix.toString() == "(a=3, b=0.5, c=0.5, d=2, tx=0, ty=1)" [./Transform.as:199]
PASSED: mcOld.transform.matrix.toString() == "(a=3, b=0.5, c=0.5, d=2, tx=0, ty=1)" [./Transform.as:200]
PASSED: mc.transform.matrix.toString() == "(a=1, b=0, c=0, d=1, tx=0, ty=0)" [./Transform.as:207]
PASSED: mcOld.transform.matrix.toString() == "(a=4, b=0.300000011920929, c=0.300000011920929, d=1, tx=1, ty=0)" [./Transform.as:210]
FAILED: nearly_equal(conc1.transform.concatenatedMatrix, 1, 0, 0, 1, 39.75, 2) [./Transform.as:234]
FAILED: nearly_equal(conc2.transform.concatenatedMatrix, 1, 0, 0, 1, 63.5, 2) [./Transform.as:235]
FAILED: nearly_equal(conc1.transform.concatenatedMatrix, 0, 0, 0, 0, 39.75, 2) [./Transform.as:238]
FAILED: nearly_equal(conc1.transform.concatenatedMatrix, 0, 0, 0, 0, 39.75, 2) [./Transform.as:239]
PASSED: ct8.toString() == "(redMultiplier=1, greenMultiplier=1, blueMultiplier=1, alphaMultiplier=1, redOffset=0, greenOffset=0, blueOffset=0, alphaOffset=0)" [./Transform.as:258]
PASSED: btx.ra == 0 [./Transform.as:264]
PASSED: btx.ba == 0 [./Transform.as:265]
PASSED: btx.ga == 0 [./Transform.as:266]
PASSED: btx.aa == 100 [./Transform.as:267]
PASSED: btx.rb == 255 [./Transform.as:268]
PASSED: btx.gb == 0 [./Transform.as:269]
PASSED: btx.bb == 0 [./Transform.as:270]
PASSED: btx.ab == 0 [./Transform.as:271]
PASSED: ct9.toString() == "(redMultiplier=0, greenMultiplier=0, blueMultiplier=0, alphaMultiplier=1, redOffset=255, greenOffset=0, blueOffset=0, alphaOffset=0)" [./Transform.as:274]
PASSED: ct10.toString() == "(redMultiplier=0, greenMultiplier=0, blueMultiplier=0, alphaMultiplier=1, redOffset=0, greenOffset=0, blueOffset=255, alphaOffset=0)" [./Transform.as:278]
PASSED: ct11.toString() == "(redMultiplier=0, greenMultiplier=0, blueMultiplier=0, alphaMultiplier=1, redOffset=0, greenOffset=127, blueOffset=0, alphaOffset=0)" [./Transform.as:284]
PASSED: btx.ra == 0 [./Transform.as:288]
PASSED: btx.ba == 0 [./Transform.as:289]
PASSED: btx.ga == 0 [./Transform.as:290]
PASSED: btx.aa == 100 [./Transform.as:291]
PASSED: btx.rb == 0 [./Transform.as:292]
PASSED: btx.gb == 127 [./Transform.as:293]
PASSED: btx.bb == 0 [./Transform.as:294]
PASSED: btx.ab == 0 [./Transform.as:295]
PASSED: ct11.toString() == "(redMultiplier=0, greenMultiplier=0, blueMultiplier=0, alphaMultiplier=1, redOffset=0, greenOffset=127, blueOffset=0, alphaOffset=0)" [./Transform.as:313]
#passed: 89
#failed: 6
#total tests run: 95
