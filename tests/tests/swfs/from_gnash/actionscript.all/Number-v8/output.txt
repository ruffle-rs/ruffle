SWF8

[Number.as debug-22403-05c7ba106]
PASSED: Number.hasOwnProperty('MAX_VALUE') [./Number.as:37]
PASSED: typeof(Number.MAX_VALUE) == "number" [./Number.as:38]
PASSED: Number.MAX_VALUE.toString() == "1.79769313486231e+308" [./Number.as:41]
PASSED: Number.hasOwnProperty('MIN_VALUE') [./Number.as:43]
PASSED: typeof(Number.MIN_VALUE) == "number" [./Number.as:44]
PASSED: Number.MIN_VALUE.toString() == "4.94065645841247e-324" [./Number.as:45]
PASSED: Number.hasOwnProperty('NEGATIVE_INFINITY') [./Number.as:47]
PASSED: Number.NEGATIVE_INFINITY == -Infinity [./Number.as:48]
PASSED: Number.hasOwnProperty('NaN') [./Number.as:50]
PASSED: Number.NaN == NaN [./Number.as:51]
PASSED: Number.hasOwnProperty('POSITIVE_INFINITY') [./Number.as:53]
PASSED: Number.POSITIVE_INFINITY == Infinity [./Number.as:54]
PASSED: typeof(n1) == 'object' [./Number.as:57]
PASSED: typeof(n1prim) == 'number' [./Number.as:59]
PASSED: n1 == n1prim [./Number.as:62]
PASSED: ! (n1 === 268) [./Number.as:66]
PASSED: ! (n1 === Number(268)) [./Number.as:68]
PASSED: n1 == 268 [./Number.as:72]
PASSED: 268 == n1 [./Number.as:73]
PASSED: typeof(n1.toString) == "function" [./Number.as:79]
PASSED: typeof(n1.toString()) == "string" [./Number.as:80]
PASSED: n1.toString() == "268" [./Number.as:81]
PASSED: n1.toString() == "268" [./Number.as:85]
PASSED: Number.prototype.hasOwnProperty('toString') [./Number.as:89]
PASSED: tmp.toString(2) == '1010' [./Number.as:93]
PASSED: tmp.toString(2) == '110' [./Number.as:95]
PASSED: tmp.toString(3) == '20' [./Number.as:96]
PASSED: tmp.toString(8) == '6' [./Number.as:97]
PASSED: tmp.toString(-2) == '6' [./Number.as:98]
PASSED: tmp.toString(0) == '6' [./Number.as:99]
PASSED: tmp.toString(5) == '11' [./Number.as:100]
PASSED: tmp.toString(2) == '-101' [./Number.as:102]
PASSED: tmp.toString(16) == '-5' [./Number.as:103]
PASSED: tmp.toString(16) == '-b' [./Number.as:105]
PASSED: typeof(n1.valueOf) == "function" [./Number.as:111]
PASSED: typeof(n1.__proto__.valueOf) == "function" [./Number.as:112]
PASSED: typeof(n1.__proto__.__proto__.valueOf) == "function" [./Number.as:113]
PASSED: typeof(n1.valueOf()) == "number" [./Number.as:114]
PASSED: n1.valueOf() == 268 [./Number.as:115]
PASSED: Number.prototype.hasOwnProperty('valueOf') [./Number.as:118]
PASSED: Object.prototype.hasOwnProperty('valueOf') [./Number.as:119]
PASSED: n1.valueOf() == 268 [./Number.as:124]
PASSED: n1.valueOf() == "fake_value" [./Number.as:129]
PASSED: -268 == n1 [./Number.as:134]
PASSED: n1.toString() == "-268" [./Number.as:135]
PASSED: typeof(NaN) == 'number' [./Number.as:141]
PASSED: typeof(isNaN) == 'function' [./Number.as:142]
PASSED: typeof(isNaN(NaN)) == 'boolean' [./Number.as:143]
PASSED: NaN == NaN [./Number.as:144]
PASSED: (0/2) == (0/5) [./Number.as:145]
PASSED: ! (NaN != NaN) [./Number.as:146]
PASSED: isNaN(NaN) [./Number.as:147]
PASSED: typeof(isNaN(0/0)) == 'boolean' [./Number.as:148]
PASSED: isNaN(0/0) [./Number.as:149]
PASSED: typeof(_global.NaN) == 'number' [./Number.as:153]
PASSED: typeof(isNaN(_global.NaN)) == 'boolean' [./Number.as:154]
PASSED: isNaN(_global.NaN) [./Number.as:155]
PASSED: isNaN(undefined) [./Number.as:164]
PASSED: isNaN(null) [./Number.as:165]
PASSED: isNaN(Object.prototype.NaN) [./Number.as:166]
PASSED: ! Object.hasOwnProperty('NaN') [./Number.as:173]
PASSED: ! Object.prototype.hasOwnProperty('NaN') [./Number.as:174]
PASSED: ! this.__proto__.hasOwnProperty('NaN') [./Number.as:175]
PASSED: typeof(Infinity) == 'number' [./Number.as:181]
PASSED: typeof(isFinite) == 'function' [./Number.as:182]
PASSED: typeof(isFinite(Infinity)) == 'boolean' [./Number.as:183]
PASSED: Infinity == Infinity [./Number.as:184]
PASSED: ! isFinite(Infinity) [./Number.as:185]
PASSED: typeof(isFinite(0/0)) == 'boolean' [./Number.as:186]
PASSED: ! isFinite(0/0) [./Number.as:187]
PASSED: typeof(_global.Infinity) == 'number' [./Number.as:191]
PASSED: typeof(isFinite(_global.Infinity)) == 'boolean' [./Number.as:192]
PASSED: ! isFinite(_global.Infinity) [./Number.as:193]
PASSED: ! isFinite(undefined) [./Number.as:202]
PASSED: ! isFinite(null) [./Number.as:203]
PASSED: ! isFinite(Object.prototype.NaN) [./Number.as:204]
PASSED: ! Object.hasOwnProperty('Infinity') [./Number.as:211]
PASSED: ! Object.prototype.hasOwnProperty('Infinity') [./Number.as:212]
PASSED: ! this.__proto__.hasOwnProperty('Infinity') [./Number.as:213]
PASSED: isNaN(0+this) [./Number.as:219]
PASSED: isNaN(this) [./Number.as:220]
PASSED: isNaN(this) [./Number.as:222]
PASSED: isNaN(o) [./Number.as:224]
PASSED: isNaN(0+o) [./Number.as:225]
PASSED: 0+o == 3 [./Number.as:227]
PASSED: 0+"string" == "0string" [./Number.as:228]
PASSED: isNaN(2+Number) [./Number.as:233]
PASSED: isNaN(2/undefined) [./Number.as:237]
PASSED: isNaN(undefined/2) [./Number.as:238]
PASSED: !isFinite(undefined/2) [./Number.as:239]
PASSED: 2/undefined != Infinity [./Number.as:240]
PASSED: !isFinite(Infinity) [./Number.as:248]
PASSED: !isFinite(2/undefined) [./Number.as:249]
PASSED: typeof(("string"<7)) == 'undefined' [./Number.as:251]
PASSED: typeof((7<"string")) == 'undefined' [./Number.as:252]
PASSED: typeof(("18"<7)) == 'boolean' [./Number.as:253]
PASSED: typeof((7<"18")) == 'boolean' [./Number.as:254]
PASSED: ("18"<"7") == true [./Number.as:255]
PASSED: ("18"<7) == false [./Number.as:256]
PASSED: (7<"18") == true [./Number.as:257]
PASSED: typeof(_root<"18") == 'undefined' [./Number.as:258]
PASSED: typeof(undefined<7) == 'undefined' [./Number.as:261]
PASSED: typeof(undefined>7) == 'undefined' [./Number.as:262]
PASSED: typeof(undefined<-7) == 'undefined' [./Number.as:263]
PASSED: typeof(undefined>-7) == 'undefined' [./Number.as:264]
PASSED: typeof(7<undefined) == 'undefined' [./Number.as:265]
PASSED: typeof(7>undefined) == 'undefined' [./Number.as:266]
PASSED: typeof(-7<undefined) == 'undefined' [./Number.as:267]
PASSED: typeof(-7>undefined) == 'undefined' [./Number.as:268]
PASSED: typeof(null<7) == 'undefined' [./Number.as:269]
PASSED: typeof(null>7) == 'undefined' [./Number.as:270]
PASSED: typeof(null<-7) == 'undefined' [./Number.as:271]
PASSED: typeof(null>-7) == 'undefined' [./Number.as:272]
PASSED: typeof(7<null) == 'undefined' [./Number.as:273]
PASSED: typeof(7>null) == 'undefined' [./Number.as:274]
PASSED: typeof(-7<null) == 'undefined' [./Number.as:275]
PASSED: typeof(-7>null) == 'undefined' [./Number.as:276]
PASSED: '0' + -1 == '0-1' [./Number.as:298]
PASSED: '00' == 0 [./Number.as:301]
PASSED: "0xFF0000" == 0xFF0000 [./Number.as:305]
PASSED: "0XFF0000" == 0xFF0000 [./Number.as:306]
PASSED: "0Xff0000" == 0xFF0000 [./Number.as:307]
PASSED: "0Xff000000" != 0xFF000000 [./Number.as:308]
PASSED: "07700000000" == 07700000000 [./Number.as:309]
PASSED: "077000000000" != 077000000000 [./Number.as:310]
PASSED: isNaN("0xff000z") [./Number.as:316]
PASSED: typeof(Number.prototype.valueOf) == 'function' [./Number.as:318]
PASSED: typeof(Number.prototype.toString) == 'function' [./Number.as:319]
PASSED: isNaN(Number.valueOf()) [./Number.as:321]
PASSED: typeof(Number) == 'function' [./Number.as:326]
PASSED: Number.hasOwnProperty('prototype') [./Number.as:327]
PASSED: Number.hasOwnProperty('__proto__') [./Number.as:328]
PASSED: Number.hasOwnProperty('constructor') [./Number.as:329]
PASSED: typeof(Number.prototype) == 'object' [./Number.as:330]
PASSED: Number.prototype != Object [./Number.as:340]
PASSED: typeof(Number.__proto__) == 'object' [./Number.as:352]
PASSED: Number.prototype.__proto__ == Object.prototype [./Number.as:353]
PASSED: typeof(Number.toString) == 'function' [./Number.as:355]
PASSED: typeof(Number.valueOf) == 'function' [./Number.as:356]
PASSED: !Number.hasOwnProperty('valueOf') [./Number.as:357]
PASSED: !Number.hasOwnProperty('toString') [./Number.as:358]
PASSED: !Number.__proto__.hasOwnProperty('valueOf') [./Number.as:359]
PASSED: !Number.__proto__.hasOwnProperty('toString') [./Number.as:360]
PASSED: Number.__proto__.__proto__ == Object.prototype [./Number.as:361]
PASSED: typeof(Number.valueOf()) == 'function' [./Number.as:363]
PASSED: typeof(a.toString) == 'function' [./Number.as:366]
PASSED: typeof(a.valueOf) == 'function' [./Number.as:367]
PASSED: !a.hasOwnProperty('valueOf') [./Number.as:368]
PASSED: a.__proto__.hasOwnProperty('valueOf') [./Number.as:374]
PASSED: !a.hasOwnProperty('toString') [./Number.as:375]
PASSED: typeof(anum.toString) == 'function' [./Number.as:379]
PASSED: typeof(anum.valueOf) == 'function' [./Number.as:380]
PASSED: !anum.hasOwnProperty('valueOf') [./Number.as:381]
PASSED: anum.__proto__.hasOwnProperty('valueOf') [./Number.as:382]
PASSED: !anum.hasOwnProperty('toString') [./Number.as:383]
PASSED: val == 4 [./Number.as:393]
PASSED: isNaN(val) [./Number.as:400]
PASSED: isNaN(val) [./Number.as:408]
PASSED: val == 10 [./Number.as:412]
PASSED: val == 300 [./Number.as:415]
PASSED: val == 20 [./Number.as:418]
PASSED: isNaN(val) [./Number.as:421]
PASSED: val == 2.6 [./Number.as:424]
PASSED: isNaN(val) [./Number.as:427]
PASSED: isNaN(val) [./Number.as:430]
PASSED: val != Infinity [./Number.as:433]
PASSED: isNaN(val) [./Number.as:434]
PASSED: val != Infinity [./Number.as:437]
PASSED: isNaN(val) [./Number.as:438]
PASSED: isNaN(val) [./Number.as:442]
PASSED: val == 7 [./Number.as:446]
PASSED: isNaN(val) [./Number.as:451]
PASSED: val == 9 [./Number.as:461]
PASSED: 9 == val [./Number.as:462]
PASSED: isNaN(450 - undefined) [./Number.as:472]
PASSED: a.toString() == "11111111111111.1" [./Number.as:489]
PASSED: a.toString() == "111111111111111" [./Number.as:492]
PASSED: a.toString() == "1.11111111111111e+15" [./Number.as:495]
PASSED: a.toString() == "0.000123456789012346" [./Number.as:498]
PASSED: a.toString() == "0.0000123456789012346" [./Number.as:501]
PASSED: a.toString() == "1.23456789012346e-6" [./Number.as:504]
PASSED: a.toString() == "1.23456789012346e-7" [./Number.as:507]
PASSED: a.toString() == "0.0999999999999999" [./Number.as:510]
PASSED: a.toString() == "0.999999999999999" [./Number.as:513]
PASSED: a.toString() == "0.999999999999999" [./Number.as:516]
PASSED: a.toString() == "0.000054" [./Number.as:519]
PASSED: a.toString() == "5.4e-6" [./Number.as:522]
PASSED: a.toString(10) == "5.4e-6" [./Number.as:523]
PASSED: a.toString() == "2.12345678912346" [./Number.as:526]
PASSED: a.toString() == "-2.12345678912346" [./Number.as:529]
PASSED: a.toString() == "0.123456789123457" [./Number.as:532]
PASSED: a.toString() == "-0.123456789123457" [./Number.as:535]
PASSED: a.toString() == "1.23456789123456e+308" [./Number.as:538]
PASSED: a.toString() == "-1.23456789123456e+308" [./Number.as:541]
PASSED: a.toString() == "1.23456789123457e-308" [./Number.as:544]
PASSED: a.toString() == "-1.23456789123457e-308" [./Number.as:547]
PASSED: a.toString() == "1.23456789123457e-6" [./Number.as:550]
PASSED: a.toString() == "-1.23456789123457e-6" [./Number.as:553]
PASSED: a.toString() == "-1.24456789123457e-6" [./Number.as:556]
PASSED: a.toString() == "-1.24466789123457e-6" [./Number.as:559]
PASSED: a.toString() == "-0.00123456789123457" [./Number.as:562]
PASSED: a.toString() == "-0.00124456789123456" [./Number.as:565]
PASSED: a.toString() == "-0.00123456789123456" [./Number.as:568]
PASSED: a.toString() == "0.00123456789123457" [./Number.as:571]
PASSED: a.toString() == "0.00123456789123456" [./Number.as:574]
PASSED: a == 2 [./Number.as:577]
PASSED: a == 2 [./Number.as:581]
PASSED: isNaN(a) [./Number.as:584]
PASSED: isNaN(a) [./Number.as:587]
PASSED: a == 2 [./Number.as:590]
PASSED: a == 2 [./Number.as:593]
PASSED: a == 2 [./Number.as:596]
PASSED: a == -2 [./Number.as:599]
PASSED: a == -0.00002 [./Number.as:602]
PASSED: a == -200000 [./Number.as:605]
PASSED: a == -56 [./Number.as:608]
PASSED: a.toString() == "NaN" [./Number.as:611]
PASSED: a == -56 [./Number.as:614]
PASSED: a == -56 [./Number.as:617]
PASSED: a == 2 [./Number.as:624]
PASSED: a == 2 [./Number.as:631]
PASSED: isNaN(a) [./Number.as:635]
PASSED: isNaN(a) [./Number.as:638]
PASSED: a == -2 [./Number.as:644]
PASSED: a == 1 [./Number.as:651]
PASSED: a == 63 [./Number.as:658]
PASSED: a == -63 [./Number.as:665]
PASSED: a == 63 [./Number.as:672]
PASSED: a == 77 [./Number.as:676]
PASSED: isNaN(0/0) [./Number.as:678]
PASSED: as == 'ff0000' [./Number.as:682]
#passed: 231
#failed: 0
#total tests run: 231
