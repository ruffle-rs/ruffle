SWF5

[ASnative.as debug-22403-05c7ba106]
PASSED: result == "false" [./ASnative.as:37]
PASSED: result == "true" [./ASnative.as:39]
PASSED: a(" ") == "%20" [./ASnative.as:42]
PASSED: a("%20") == " " [./ASnative.as:44]
PASSED: a("  566765s") == "566765" [./ASnative.as:46]
PASSED: a("8.4e6") == 8.4e6 [./ASnative.as:48]
PASSED: a(65, 1, 1, 1, 1, 1, 1) == Date.UTC(65, 1, 1, 1, 1, 1, 1) [./ASnative.as:54]
PASSED: e().valueOf() == Date().valueOf() [./ASnative.as:57]
PASSED: typeOf(g().valueOf()) == 'string' [./ASnative.as:59]
PASSED: e(100000).valueOf() == Date().valueOf() [./ASnative.as:61]
PASSED: typeOf(g.getMilliseconds) == 'undefined' [./ASnative.as:64]
PASSED: typeof(f) == 'object' [./ASnative.as:67]
PASSED: typeof(f.getMilliseconds()) == 'undefined' [./ASnative.as:68]
PASSED: typeof(f().getMilliseconds()) == 'undefined' [./ASnative.as:69]
PASSED: d.a() == d.getFullYear() [./ASnative.as:74]
PASSED: d.a() == d.getYear() [./ASnative.as:76]
PASSED: d.a() == d.getMonth() [./ASnative.as:78]
PASSED: d.a() == d.getDate() [./ASnative.as:80]
PASSED: d.a() == d.getDay() [./ASnative.as:82]
PASSED: d.a() == d.getHours() [./ASnative.as:84]
PASSED: d.a() == d.getMinutes() [./ASnative.as:86]
PASSED: d.a() == d.getSeconds() [./ASnative.as:88]
PASSED: d.a() == d.getMilliseconds() [./ASnative.as:90]
PASSED: d.a() == d.getTime() [./ASnative.as:92]
PASSED: d.a() == d.getTimezoneOffset() [./ASnative.as:94]
PASSED: d.a() == d.toString() [./ASnative.as:96]
PASSED: d.a() == d.getUTCFullYear() [./ASnative.as:98]
PASSED: d.a() == d.getUTCYear() [./ASnative.as:100]
PASSED: d.a() == d.getUTCMonth() [./ASnative.as:102]
PASSED: d.a() == d.getUTCDate() [./ASnative.as:104]
PASSED: d.a() == d.getUTCDay() [./ASnative.as:106]
PASSED: d.a() == d.getUTCHours() [./ASnative.as:108]
PASSED: d.a() == d.getUTCMinutes() [./ASnative.as:110]
PASSED: d.a() == d.getUTCSeconds() [./ASnative.as:112]
PASSED: d.a() == d.getUTCMilliseconds() [./ASnative.as:114]
PASSED: d.a() == d.getYear() [./ASnative.as:116]
PASSED: a(func) == 0.3 [./ASnative.as:137]
PASSED: a(0.3) == 0.3 [./ASnative.as:138]
PASSED: a(func, func + 1) == 0.3 [./ASnative.as:141]
PASSED: a(0.3, 1.3) == 0.3 [./ASnative.as:142]
PASSED: a(func, func + 1) == 1.3 [./ASnative.as:145]
PASSED: a(0.3, 1.3) == 1.3 [./ASnative.as:146]
PASSED: a(func).toString() == "0.29552020666134" [./ASnative.as:149]
PASSED: a(0.3).toString() == "0.29552020666134" [./ASnative.as:150]
PASSED: a(func).toString() == "0.955336489125606" [./ASnative.as:153]
PASSED: a(0.3).toString() == "0.955336489125606" [./ASnative.as:154]
PASSED: a(func, func + 1).toString() == "0.226798848053886" [./ASnative.as:157]
PASSED: a(0.3, 1.3).toString() == "0.226798848053886" [./ASnative.as:158]
PASSED: a(func).toString() == "0.309336249609623" [./ASnative.as:161]
PASSED: a(func).toString() == "1.349858807576" [./ASnative.as:163]
PASSED: a(func).toString() == "-1.20397280432594" [./ASnative.as:165]
PASSED: a(func).toString() == "0.547722557505166" [./ASnative.as:167]
PASSED: a(func) == 0 [./ASnative.as:169]
PASSED: a(func) >= 0 && a(func < 1) [./ASnative.as:171]
PASSED: a(func) == 0 [./ASnative.as:173]
PASSED: a(func) == 1 [./ASnative.as:175]
PASSED: a(func).toString() == "0.291456794477867" [./ASnative.as:177]
FAILED: expected: "0.304692654015398" obtained: 0.304692654015397 [./ASnative.as:179]
PASSED: a(func).toString() == "1.2661036727795" [./ASnative.as:181]
PASSED: a(func, func + 1).toString() == "0.209053590580785" [./ASnative.as:183]
PASSED: a(func) == false [./ASnative.as:185]
PASSED: a(func) == true [./ASnative.as:187]
FAILED: expected: 25 obtained: 26 [./ASnative.as:189]
PASSED: countTS == 0 [./ASnative.as:190]
PASSED: a("Hello World") == "_LEVEL0" [./ASnative.as:195]
PASSED: a("Hello World") == "_LEVEL0" [./ASnative.as:197]
PASSED: countTS == 0 [./ASnative.as:203]
PASSED: func.a() == "GNASH MUST WORK! öÜäÄ€€" [./ASnative.as:217]
PASSED: func.a() == "gnash must work! öÜäÄ€€" [./ASnative.as:220]
PASSED: countTS == 2 [./ASnative.as:226]
PASSED: st() == "exactFit" [./ASnative.as:233]
PASSED: st() == "LRB" [./ASnative.as:239]
PASSED: st() == 640 [./ASnative.as:245]
PASSED: st() == 480 [./ASnative.as:251]
PASSED: countTS == 2 [./ASnative.as:260]
FAILED: expected: 25 obtained: 26 [./ASnative.as:263]
PASSED: typeof(f) == "null" [./ASnative.as:269]
PASSED: typeof(f.data) == "undefined" [./ASnative.as:273]
PASSED: ret == true [./ASnative.as:275]
PASSED: typeof(f.data) == "object" [./ASnative.as:276]
PASSED: a == b [./ASnative.as:282]
PASSED: typeof(f) == "function" [./ASnative.as:295]
PASSED: typeof(f.prototype) == "object" [./ASnative.as:296]
PASSED: obj.__proto__ == f.prototype [./ASnative.as:302]
PASSED: obj.__proto__ == undefined [./ASnative.as:306]
PASSED: typeof(obj) == "object" [./ASnative.as:309]
PASSED: obj.toString() == "6" [./ASnative.as:310]
PASSED: typeof(obj) == "object" [./ASnative.as:314]
PASSED: obj.toString() == undefined [./ASnative.as:315]
PASSED: obj.toString() == "6" [./ASnative.as:319]
PASSED: typeof(g) == "function" [./ASnative.as:322]
PASSED: typeof(g.prototype) == "undefined" [./ASnative.as:323]
PASSED: typeof(f) == "function" [./ASnative.as:329]
PASSED: typeof(f.prototype) == "object" [./ASnative.as:330]
PASSED: typeof(obj) == "object" [./ASnative.as:332]
PASSED: obj.toString() == undefined [./ASnative.as:333]
PASSED: obj.toString() == undefined [./ASnative.as:336]
PASSED: typeof(f) == "function" [./ASnative.as:343]
PASSED: typeof(f.prototype) == "object" [./ASnative.as:344]
PASSED: typeof(g) == "undefined" [./ASnative.as:347]
PASSED: typeof(g.prototype) == "undefined" [./ASnative.as:348]
#passed: 98
#failed: 3
#total tests run: 101
