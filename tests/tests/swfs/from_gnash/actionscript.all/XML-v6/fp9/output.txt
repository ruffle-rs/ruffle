SWF6

[XML.as debug-22405-0e18b8076]
PASSED: XML [./XML.as:36]
PASSED: ! XML.prototype.hasOwnProperty("appendChild") [./XML.as:38]
PASSED: ! XML.prototype.hasOwnProperty("cloneNode") [./XML.as:39]
PASSED: ! XML.prototype.hasOwnProperty("hasChildNodes") [./XML.as:40]
PASSED: ! XML.prototype.hasOwnProperty("insertBefore") [./XML.as:41]
PASSED: ! XML.prototype.hasOwnProperty("removeNode") [./XML.as:42]
PASSED: ! XML.prototype.hasOwnProperty("cloneNode") [./XML.as:43]
PASSED: ! XML.prototype.hasOwnProperty("toString") [./XML.as:44]
PASSED: ! XML.prototype.hasOwnProperty("length") [./XML.as:45]
PASSED: ! XML.prototype.hasOwnProperty("status") [./XML.as:46]
PASSED: ! XML.prototype.hasOwnProperty("loaded") [./XML.as:47]
PASSED: ! XML.prototype.hasOwnProperty("attributes") [./XML.as:48]
PASSED: ! XML.prototype.hasOwnProperty("nodeValue") [./XML.as:49]
PASSED: XML.prototype.hasOwnProperty("onData") [./XML.as:50]
PASSED: XML.prototype.hasOwnProperty("onLoad") [./XML.as:51]
PASSED: XML.prototype.hasOwnProperty("createElement") [./XML.as:52]
PASSED: XML.prototype.hasOwnProperty("addRequestHeader") [./XML.as:53]
PASSED: XML.prototype.hasOwnProperty("createTextNode") [./XML.as:54]
PASSED: XML.prototype.hasOwnProperty("getBytesLoaded") [./XML.as:55]
PASSED: XML.prototype.hasOwnProperty("getBytesTotal") [./XML.as:56]
PASSED: !XML.prototype.hasOwnProperty("_bytesTotal") [./XML.as:57]
PASSED: !XML.prototype.hasOwnProperty("_bytesLoaded") [./XML.as:58]
PASSED: XML.prototype.hasOwnProperty("load") [./XML.as:59]
PASSED: XML.prototype.hasOwnProperty("parseXML") [./XML.as:60]
PASSED: XML.prototype.hasOwnProperty("send") [./XML.as:61]
PASSED: XML.prototype.hasOwnProperty("sendAndLoad") [./XML.as:62]
PASSED: !XML.prototype.hasOwnProperty("docTypeDecl") [./XML.as:64]
PASSED: !XML.prototype.hasOwnProperty("xmlDecl") [./XML.as:65]
PASSED: !XML.prototype.hasOwnProperty("ignoreWhite") [./XML.as:67]
PASSED: !XML.hasOwnProperty("createElement") [./XML.as:69]
PASSED: !XML.hasOwnProperty("addRequestHeader") [./XML.as:70]
PASSED: !XML.hasOwnProperty("createTextNode") [./XML.as:71]
PASSED: !XML.hasOwnProperty("getBytesLoaded") [./XML.as:72]
PASSED: !XML.hasOwnProperty("getBytesTotal") [./XML.as:73]
PASSED: !XML.hasOwnProperty("load") [./XML.as:74]
PASSED: !XML.hasOwnProperty("parseXML") [./XML.as:75]
PASSED: !XML.hasOwnProperty("send") [./XML.as:76]
PASSED: !XML.hasOwnProperty("sendAndLoad") [./XML.as:77]
PASSED: !XML.hasOwnProperty("nodeValue") [./XML.as:78]
PASSED: !XML.hasOwnProperty("_customHeaders") [./XML.as:79]
PASSED: !XML.hasOwnProperty("docTypeDecl") [./XML.as:80]
PASSED: !XML.hasOwnProperty("xmlDecl") [./XML.as:81]
PASSED: XMLNode.prototype.hasOwnProperty("appendChild") [./XML.as:83]
PASSED: XMLNode.prototype.hasOwnProperty("cloneNode") [./XML.as:84]
PASSED: XMLNode.prototype.hasOwnProperty("hasChildNodes") [./XML.as:85]
PASSED: XMLNode.prototype.hasOwnProperty("insertBefore") [./XML.as:86]
PASSED: XMLNode.prototype.hasOwnProperty("removeNode") [./XML.as:87]
PASSED: XMLNode.prototype.hasOwnProperty("toString") [./XML.as:88]
PASSED: XMLNode.prototype.hasOwnProperty("cloneNode") [./XML.as:89]
PASSED: XMLNode.prototype.hasOwnProperty("attributes") [./XML.as:90]
PASSED: XMLNode.prototype.hasOwnProperty("parentNode") [./XML.as:91]
PASSED: XMLNode.prototype.hasOwnProperty("nodeValue") [./XML.as:92]
PASSED: ! XMLNode.prototype.hasOwnProperty("onData") [./XML.as:93]
PASSED: ! XMLNode.prototype.hasOwnProperty("length") [./XML.as:94]
PASSED: ! XMLNode.prototype.hasOwnProperty("createElement") [./XML.as:95]
PASSED: ! XMLNode.prototype.hasOwnProperty("addRequestHeader") [./XML.as:96]
PASSED: ! XMLNode.prototype.hasOwnProperty("createTextNode") [./XML.as:97]
PASSED: ! XMLNode.prototype.hasOwnProperty("getBytesLoaded") [./XML.as:98]
PASSED: ! XMLNode.prototype.hasOwnProperty("getBytesTotal") [./XML.as:99]
PASSED: ! XMLNode.prototype.hasOwnProperty("load") [./XML.as:100]
PASSED: ! XMLNode.prototype.hasOwnProperty("parseXML") [./XML.as:101]
PASSED: ! XMLNode.prototype.hasOwnProperty("send") [./XML.as:102]
PASSED: ! XMLNode.prototype.hasOwnProperty("sendAndLoad") [./XML.as:103]
PASSED: ! XMLNode.prototype.hasOwnProperty("status") [./XML.as:104]
PASSED: ! XMLNode.prototype.hasOwnProperty("loaded") [./XML.as:105]
PASSED: ! XMLNode.hasOwnProperty("appendChild") [./XML.as:107]
PASSED: ! XMLNode.hasOwnProperty("cloneNode") [./XML.as:108]
PASSED: ! XMLNode.hasOwnProperty("hasChildNodes") [./XML.as:109]
PASSED: ! XMLNode.hasOwnProperty("insertBefore") [./XML.as:110]
PASSED: ! XMLNode.hasOwnProperty("removeNode") [./XML.as:111]
PASSED: ! XMLNode.hasOwnProperty("toString") [./XML.as:112]
PASSED: ! XMLNode.hasOwnProperty("cloneNode") [./XML.as:113]
PASSED: ! XMLNode.hasOwnProperty("nodeValue") [./XML.as:114]
PASSED: XML.prototype instanceof XMLNode [./XML.as:116]
PASSED: !tmp.hasOwnProperty("docTypeDecl") [./XML.as:122]
PASSED: !tmp.hasOwnProperty("xmlDecl") [./XML.as:123]
PASSED: XML.prototype.hasOwnProperty("docTypeDecl") [./XML.as:124]
PASSED: XML.prototype.hasOwnProperty("xmlDecl") [./XML.as:125]
PASSED: XML.prototype.hasOwnProperty("contentType") [./XML.as:126]
PASSED: XML.prototype.hasOwnProperty("ignoreWhite") [./XML.as:127]
PASSED: ! tmp.hasOwnProperty("nodeValue") [./XML.as:130]
PASSED: tmp instanceof XML [./XML.as:133]
PASSED: tmp instanceof XMLNode [./XML.as:134]
PASSED: typeof(tmp.length) == 'undefined' [./XML.as:136]
PASSED: ! tmp.hasOwnProperty("length") [./XML.as:137]
PASSED: typeof(tmp.status) == 'number' [./XML.as:139]
PASSED: ! tmp.hasOwnProperty("status") [./XML.as:140]
PASSED: tmp.__proto__.hasOwnProperty('status') [./XML.as:141]
PASSED: tmp.__proto__.hasOwnProperty("status") [./XML.as:146]
PASSED: tmp.__proto__.hasOwnProperty("loaded") [./XML.as:147]
PASSED: !tmp.__proto__.hasOwnProperty("toString") [./XML.as:150]
PASSED: !tmp.hasOwnProperty("toString") [./XML.as:151]
PASSED: tmp.status == 0 [./XML.as:154]
PASSED: tmp.status == -1 [./XML.as:156]
PASSED: tmp.status == 1000 [./XML.as:158]
PASSED: typeof(tmp.status) == 'number' [./XML.as:161]
FAILED: expected: -2147483648.0 obtained: 0 [./XML.as:162]
PASSED: tmp.status == 7 [./XML.as:164]
PASSED: typeof(tmp.status) == 'number' [./XML.as:169]
FAILED: expected: -2147483648.0 obtained: 0 [./XML.as:170]
PASSED: typeof(tmp.status) == 'number' [./XML.as:174]
PASSED: tmp.status == 5 [./XML.as:175]
PASSED: typeof(tmp.status) == 'number' [./XML.as:178]
FAILED: expected: -2147483648.0 obtained: 0 [./XML.as:179]
PASSED: tmp.status == -100000 [./XML.as:182]
PASSED: typeof(tmp.loaded) == 'undefined' [./XML.as:184]
PASSED: ! tmp.hasOwnProperty("loaded") [./XML.as:185]
PASSED: typeof(tmp.loaded) == 'boolean' [./XML.as:188]
PASSED: tmp.loaded [./XML.as:189]
PASSED: typeof(tmp.loaded) == 'boolean' [./XML.as:191]
PASSED: !tmp.loaded [./XML.as:192]
PASSED: ! tmp.hasOwnProperty("loaded") [./XML.as:193]
PASSED: tmp.__proto__.hasOwnProperty("loaded") [./XML.as:194]
PASSED: tmp.loaded == true [./XML.as:197]
PASSED: tmp.__proto__.loaded == undefined [./XML.as:198]
PASSED: XML::XML() constructor
PASSED: XML [./XML.as:207]
PASSED: XML::addRequestHeader() exists
PASSED: XML::appendChild() exists
PASSED: XML::cloneNode() exists
PASSED: XML::createElement() exists
PASSED: XML::createTextNode() exists
PASSED: XML::getBytesLoaded() exists
PASSED: XML::getBytesTotal() exists
PASSED: XML::hasChildNodes() exists
PASSED: XML::insertBefore() exists
PASSED: XML::load() exists
PASSED: XML::parseXML() exists
PASSED: XML::removeNode() exists
PASSED: XML::send() exists
PASSED: XML::sendAndLoad() exists
PASSED: XML::toString() exists
PASSED: XML [./XML.as:313]
PASSED: XML [./XML.as:315]
PASSED: XML [./XML.as:323]
PASSED: XML [./XML.as:331]
PASSED: typeof(tmp.parseXML) == 'function' [./XML.as:482]
PASSED: tmp.childNodes instanceOf Array [./XML.as:483]
PASSED: tmp.childNodes.length == 0 [./XML.as:484]
PASSED: typeof(ret) == 'undefined' [./XML.as:488]
PASSED: this.getBytesLoaded() == undefined [./XML.as:339]
PASSED: this.getBytesTotal() == undefined [./XML.as:340]
PASSED: this.hasChildNodes() [./XML.as:342]
PASSED: typeof(this.nodeName) == 'null' [./XML.as:343]
PASSED: typeof(this.nodeValue) == 'null' [./XML.as:344]
PASSED: this.childNodes instanceof Array [./XML.as:345]
PASSED: this.firstChild == this.lastChild [./XML.as:346]
PASSED: this.firstChild instanceof XMLNode [./XML.as:347]
PASSED: typeof(this.length) == 'undefined' [./XML.as:348]
PASSED: typeof(this.childNodes.length) == 'number' [./XML.as:349]
PASSED: this.childNodes.length == 1 [./XML.as:350]
PASSED: this.childNodes[0] == this.firstChild [./XML.as:351]
PASSED: this.childNodes[0] == this.lastChild [./XML.as:352]
PASSED: this.childNodes.hasOwnProperty('length') [./XML.as:354]
PASSED: this.childNodes[0] === this.firstChild [./XML.as:355]
PASSED: this.childNodes[0] === this.lastChild [./XML.as:356]
PASSED: this.childNodes instanceof Array [./XML.as:360]
PASSED: nodeName == 'TOPNODE' [./XML.as:364]
PASSED: typeof(nodeValue) == 'null' [./XML.as:365]
PASSED: typeof(nextSibling) == 'null' [./XML.as:366]
PASSED: typeof(previousSibling) == 'null' [./XML.as:367]
PASSED: typeof(attributes) == 'object' [./XML.as:370]
PASSED: attributes.tna1 == 'tna1val' [./XML.as:371]
PASSED: attributes.tna2 == 'tna2val' [./XML.as:372]
PASSED: attrcopy.tna1 == 'tna1val' [./XML.as:376]
PASSED: attrcopy.tna2 == 'tna2val' [./XML.as:377]
PASSED: typeof(nodeValue) == 'string' [./XML.as:382]
PASSED: nodeValue == '4' [./XML.as:383]
PASSED: nodeType == 1 [./XML.as:385]
PASSED: childNodes.length == 2 [./XML.as:386]
PASSED: nodeName == 'SUBNODE1' [./XML.as:390]
PASSED: typeof(nodeValue) == 'null' [./XML.as:391]
PASSED: typeof(nextSibling) == 'object' [./XML.as:393]
PASSED: nextSibling.nodeName == 'SUBNODE2' [./XML.as:394]
PASSED: typeof(previousSibling) == 'null' [./XML.as:395]
PASSED: typeof(attributes) == 'object' [./XML.as:397]
PASSED: attributes.sna1 == 'sna1val' [./XML.as:398]
PASSED: attributes.sna2 == 'sna2val' [./XML.as:399]
PASSED: nodeType == 1 [./XML.as:401]
PASSED: childNodes.length == 2 [./XML.as:402]
PASSED: nodeName == 'SUBSUBNODE1' [./XML.as:405]
PASSED: typeof(nodeValue) == 'null' [./XML.as:406]
PASSED: nodeType == 1 [./XML.as:407]
PASSED: typeof(nextSibling) == 'object' [./XML.as:408]
PASSED: nextSibling.nodeName == 'SUBSUBNODE2' [./XML.as:409]
PASSED: typeof(previousSibling) == 'null' [./XML.as:410]
PASSED: typeof(attributes) == 'object' [./XML.as:411]
PASSED: attributes.ssna1 == 'ssna1val' [./XML.as:412]
PASSED: attributes.ssna2 == 'ssna2val' [./XML.as:413]
PASSED: childNodes.length == 1 [./XML.as:414]
PASSED: typeof(nodeName) == 'null' [./XML.as:417]
PASSED: nodeValue == 'sub sub1 node data 1' [./XML.as:418]
PASSED: nodeType == 3 [./XML.as:419]
PASSED: nodeName == 'SUBSUBNODE2' [./XML.as:424]
PASSED: typeof(nodeValue) == 'null' [./XML.as:425]
PASSED: nodeType == 1 [./XML.as:426]
PASSED: typeof(nextSibling) == 'null' [./XML.as:427]
PASSED: typeof(previousSibling) == 'object' [./XML.as:428]
PASSED: previousSibling.nodeName == 'SUBSUBNODE1' [./XML.as:429]
PASSED: childNodes.length == 1 [./XML.as:430]
PASSED: typeof(nodeName) == 'null' [./XML.as:433]
PASSED: nodeValue == 'sub /\sub1 <br>"node data 2"' [./XML.as:434]
PASSED: nodeType == 3 [./XML.as:435]
PASSED: nodeName == 'SUBNODE2' [./XML.as:442]
PASSED: typeof(nodeValue) == 'null' [./XML.as:443]
PASSED: nodeType == 1 [./XML.as:444]
PASSED: typeof(nextSibling) == 'null' [./XML.as:446]
PASSED: typeof(previousSibling) == 'object' [./XML.as:447]
PASSED: previousSibling.nodeName == 'SUBNODE1' [./XML.as:448]
PASSED: childNodes.length == 2 [./XML.as:450]
PASSED: nodeName == 'SUBSUBNODE1' [./XML.as:453]
PASSED: typeof(nodeValue) == 'null' [./XML.as:454]
PASSED: nodeType == 1 [./XML.as:455]
PASSED: childNodes.length == 1 [./XML.as:456]
PASSED: typeof(nodeName) == 'null' [./XML.as:459]
PASSED: nodeValue == 'sub sub2 node data 1' [./XML.as:460]
PASSED: nodeType == 3 [./XML.as:461]
PASSED: nodeName == 'SUBSUBNODE2' [./XML.as:466]
PASSED: typeof(nodeValue) == 'null' [./XML.as:467]
PASSED: nodeType == 1 [./XML.as:468]
PASSED: childNodes.length == 1 [./XML.as:469]
PASSED: typeof(nodeName) == 'null' [./XML.as:472]
PASSED: nodeValue == 'sub sub2 node data 2' [./XML.as:473]
PASSED: nodeType == 3 [./XML.as:474]
PASSED: this.firstChild.nodeValue == '4' [./XML.as:479]
PASSED: tmp.toString() == xml_out [./XML.as:494]
PASSED: xml1.childNodes.length == 1 [./XML.as:501]
PASSED: xml1.firstChild.childNodes.length == 2 [./XML.as:502]
PASSED: xml2.childNodes.length == 1 [./XML.as:503]
PASSED: xml2.firstChild.childNodes.length == 2 [./XML.as:504]
PASSED: movingchild.parentNode == xml2.firstChild [./XML.as:509]
PASSED: movingchild.parentNode != xml1.firstChild [./XML.as:510]
PASSED: movingchild.parentNode == xml1.firstChild [./XML.as:512]
PASSED: movingchild.parentNode != xml2.firstChild [./XML.as:513]
PASSED: xml1.firstChild.childNodes.length == 3 [./XML.as:515]
PASSED: xml1.firstChild.childNodes[0].nodeName == "X1C1" [./XML.as:516]
PASSED: xml1.firstChild.childNodes[1].nodeName == "X1C2" [./XML.as:517]
PASSED: xml1.firstChild.childNodes[2].nodeName == "X2C2" [./XML.as:518]
PASSED: xml2.firstChild.childNodes.length == 1 [./XML.as:520]
PASSED: xml2.firstChild.childNodes[0].nodeName == "X2C1" [./XML.as:521]
PASSED: xml1.firstChild.childNodes.length == 4 [./XML.as:528]
PASSED: xml1.firstChild.childNodes[0].nodeName == "X1C1" [./XML.as:529]
PASSED: xml1.firstChild.childNodes[1].nodeName == "X2C1" [./XML.as:530]
PASSED: xml1.firstChild.childNodes[2].nodeName == "X1C2" [./XML.as:531]
PASSED: xml1.firstChild.childNodes[3].nodeName == "X2C2" [./XML.as:532]
PASSED: xml2.firstChild.childNodes.length == 0 [./XML.as:535]
PASSED: xml2.childNodes.length == 0 [./XML.as:537]
PASSED: x1c1_node.nodeName == "X1C1" [./XML.as:541]
PASSED: x1c1_node.nextSibling == x2c1_node [./XML.as:542]
PASSED: x2c1_node.nodeName == "X2C1" [./XML.as:543]
PASSED: x2c1_node.previousSibling == x1c1_node [./XML.as:544]
PASSED: xml1.childNodes.length == 0 [./XML.as:546]
PASSED: x1c1_node.nodeName == "X1C1" [./XML.as:548]
PASSED: x1c1_node.nextSibling() == null [./XML.as:549]
PASSED: x2c1_node.nodeName == "X2C1" [./XML.as:550]
PASSED: x2c1_node.previousSibling() == null [./XML.as:551]
PASSED: x1c1_node.nextSibling == x2c1_node [./XML.as:555]
PASSED: x2c1_node.previousSibling == x1c1_node [./XML.as:556]
PASSED: xml1.childNodes.length == 2 [./XML.as:558]
PASSED: xml1.childNodes.length == 1 [./XML.as:560]
PASSED: xml1.firstChild.lastChild.nodeName == 'X2C1' [./XML.as:561]
PASSED: src_node.childNodes.length == 1 [./XML.as:567]
PASSED: cln_node.childNodes.length == 0 [./XML.as:568]
PASSED: deepcln_node.childNodes.length == 1 [./XML.as:569]
PASSED: src_node.firstChild.nodeName == 'X2C1' [./XML.as:571]
PASSED: deepcln_node.firstChild.nodeName == 'X2C1' [./XML.as:572]
PASSED: src_node.firstChild.nodeName == 'X2C1_modified' [./XML.as:574]
PASSED: deepcln_node.firstChild.nodeName == 'X2C1' [./XML.as:575]
PASSED: deepcln_node.parentNode == null [./XML.as:577]
PASSED: deepcln_node.parentNode == null [./XML.as:579]
PASSED: xml1.firstChild.childNodes.length == 2 [./XML.as:583]
PASSED: fc.nodeName == 'X1C1' [./XML.as:585]
PASSED: fc.childNodes.length == 1 [./XML.as:586]
PASSED: fc.parentNode == xml1.firstChild [./XML.as:587]
PASSED: xml1.firstChild.childNodes.length == 1 [./XML.as:589]
PASSED: fc.parentNode == null [./XML.as:590]
PASSED: fc.nodeName == 'X1C1' [./XML.as:591]
PASSED: fc.childNodes.length == 1 [./XML.as:592]
PASSED: fc.childNodes[0].parentNode == fc [./XML.as:593]
PASSED: myXML != undefined [./XML.as:600]
PASSED: myXML.createElement [./XML.as:601]
PASSED: element1.nodeName == "element1" [./XML.as:606]
PASSED: element2.nodeName == "element2" [./XML.as:609]
PASSED: element3.nodeName == "element3" [./XML.as:612]
PASSED: myXML.createTextNode [./XML.as:614]
PASSED: textNode1.nodeValue == "textNode1 String value" [./XML.as:618]
PASSED: textNode2.nodeValue == "textNode2 String value" [./XML.as:621]
PASSED: !element2.hasChildNodes() [./XML.as:624]
PASSED: typeof(ret) == 'undefined' [./XML.as:626]
PASSED: element2.hasChildNodes() [./XML.as:627]
PASSED: element2.nodeValue == null [./XML.as:629]
PASSED: typeof(element2.lastChild) == 'object' [./XML.as:630]
PASSED: element2.lastChild.nodeValue == "textNode1 String value" [./XML.as:631]
PASSED: typeof(element2.lastChild) == 'object' [./XML.as:633]
PASSED: element3.nodeValue == null [./XML.as:636]
PASSED: typeof(element3.lastChild) == 'object' [./XML.as:637]
PASSED: element3.lastChild.nodeValue == "textNode2 String value" [./XML.as:638]
PASSED: element1.hasChildNodes() [./XML.as:645]
PASSED: element1.firstChild.nodeName == "element2" [./XML.as:648]
PASSED: element2.hasChildNodes() [./XML.as:651]
undefined
PASSED: !r.hasOwnProperty("loaded") [./XML.as:685]
PASSED: x.sendAndLoad("some server name", r) == true [./XML.as:686]
PASSED: r.hasOwnProperty("loaded") [./XML.as:687]
PASSED: !r.hasOwnProperty("loaded") [./XML.as:690]
PASSED: x.sendAndLoad("some server name", r) == true [./XML.as:691]
PASSED: !r.hasOwnProperty("loaded") [./XML.as:692]
PASSED: typeof(r.loaded) == "boolean" [./XML.as:693]
PASSED: r.loaded == false [./XML.as:694]
PASSED: !r.hasOwnProperty("loaded") [./XML.as:699]
PASSED: x.sendAndLoad("some server name", r) == true [./XML.as:700]
PASSED: r.hasOwnProperty("loaded") [./XML.as:701]
PASSED: typeof(r.loaded) == "boolean" [./XML.as:702]
PASSED: r.loaded == false [./XML.as:703]
PASSED: !r.hasOwnProperty("loaded") [./XML.as:707]
PASSED: x.sendAndLoad("some server name", r) == true [./XML.as:708]
PASSED: r.hasOwnProperty("loaded") [./XML.as:709]
PASSED: typeof(r.loaded) == "boolean" [./XML.as:710]
PASSED: r.loaded == false [./XML.as:711]
PASSED: r.toString() == t.toString() [./XML.as:713]
PASSED: r instanceOf Date [./XML.as:714]
PASSED: !r.hasOwnProperty("loaded") [./XML.as:717]
PASSED: x.sendAndLoad("some server name", r) == false [./XML.as:718]
PASSED: !r.hasOwnProperty("loaded") [./XML.as:719]
PASSED: typeof(r.loaded) == "undefined" [./XML.as:720]
PASSED: r.loaded == undefined [./XML.as:721]
PASSED: !r.hasOwnProperty("loaded") [./XML.as:724]
PASSED: x.sendAndLoad("some server name", r) == false [./XML.as:725]
PASSED: !r.hasOwnProperty("loaded") [./XML.as:726]
PASSED: typeof(r.loaded) == "undefined" [./XML.as:727]
PASSED: r.loaded == undefined [./XML.as:728]
PASSED: !r.hasOwnProperty("loaded") [./XML.as:731]
PASSED: x.sendAndLoad("some server name", r) == true [./XML.as:732]
PASSED: r.hasOwnProperty("loaded") [./XML.as:733]
PASSED: typeof(r.loaded) == "boolean" [./XML.as:734]
PASSED: r.loaded == false [./XML.as:735]
PASSED: !x.hasOwnProperty("_customHeaders") [./XML.as:742]
PASSED: x.hasOwnProperty("_customHeaders") [./XML.as:745]
PASSED: x._customHeaders instanceOf Array [./XML.as:746]
PASSED: x._customHeaders.toString() == "header1,value1" [./XML.as:747]
PASSED: x._customHeaders.toString() == "header1,value1,header2,value2" [./XML.as:750]
PASSED: x._customHeaders.toString() == "header1,value1,header2,value2,header3,value3,header4,value4" [./XML.as:753]
PASSED: x._customHeaders.toString() == "header1,value1,header2,value2,header3,value3,header4" [./XML.as:756]
PASSED: x._customHeaders.toString() == "header1,value1,header2,value2,header3,value3,header4,,value4" [./XML.as:760]
PASSED: x._customHeaders.toString() == "header1,value1,header2,value2,header3,value3,header4,shoved in,value4,header5,value5" [./XML.as:768]
PASSED: x._customHeaders.toString() == "header1,value1,header2,value2,header3,value3,header4,shoved in,value4,header5,value5,GET,should not be sent" [./XML.as:771]
PASSED: x._customHeaders.toString() == "header1,value1,header2,value2,header3,value3,header4,shoved in,value4,header5,value5,GET,should not be sent,Public,should not be sent" [./XML.as:774]
PASSED: x._customHeaders.toString() == "header1,value1,header2,value2,header3,value3,header4,shoved in,value4,header5,value5,GET,should not be sent,Public,should not be sent" [./XML.as:778]
PASSED: x._customHeaders.toString() == "3" [./XML.as:781]
PASSED: x._customHeaders.toString() == "3" [./XML.as:784]
PASSED: !x.hasOwnProperty("_customHeaders") [./XML.as:789]
PASSED: x.hasOwnProperty("_customHeaders") [./XML.as:791]
PASSED: x._customHeaders.toString() == "" [./XML.as:792]
PASSED: !x.hasOwnProperty("_customHeaders") [./XML.as:795]
PASSED: x.hasOwnProperty("_customHeaders") [./XML.as:797]
PASSED: x._customHeaders.toString() == "" [./XML.as:798]
PASSED: x._customHeaders.toString() == "" [./XML.as:803]
PASSED: x._customHeaders.toString() == "" [./XML.as:806]
PASSED: x._customHeaders.toString() == "" [./XML.as:809]
PASSED: x._customHeaders.toString() == "string,string" [./XML.as:812]
PASSED: typeof(myxml.onData) == 'function' [./XML.as:822]
PASSED: myxml.onData != XML.prototype.parseXML [./XML.as:824]
PASSED: !myxml.hasOwnProperty('onLoad') [./XML.as:827]
PASSED: typeof(myxml.status) == 'number' [./XML.as:926]
PASSED: typeof(myxml.STATUS) == 'number' [./XML.as:928]
PASSED: typeof(myxml.__proto__.status) == 'undefined' [./XML.as:933]
PASSED: typeof(myxml.loaded) == 'undefined' [./XML.as:934]
PASSED: typeof(myxml._bytesLoaded) == 'undefined' [./XML.as:935]
PASSED: typeof(myxml._bytesTotal) == 'undefined' [./XML.as:936]
PASSED: !myxml.hasOwnProperty('status') [./XML.as:938]
PASSED: !myxml.hasOwnProperty('loaded') [./XML.as:939]
PASSED: !myxml.hasOwnProperty('_bytesLoaded') [./XML.as:940]
PASSED: !myxml.hasOwnProperty('_bytesTotal') [./XML.as:941]
PASSED: myxml.hasOwnProperty('_bytesLoaded') [./XML.as:945]
PASSED: myxml.hasOwnProperty('_bytesTotal') [./XML.as:946]
PASSED: typeof(myxml.loaded) == 'boolean' [./XML.as:948]
PASSED: typeof(myxml.LOADED) == 'boolean' [./XML.as:950]
PASSED: ! myxml.loaded [./XML.as:954]
PASSED: myxml.loaded == false [./XML.as:956]
PASSED: myxml2.childNodes.length == 1 [./XML.as:975]
PASSED: myxml2.toString() == xmlin [./XML.as:976]
PASSED: myxml2.childNodes.length == 1 [./XML.as:978]
PASSED: myxml2.toString() == xmlin2_out [./XML.as:979]
PASSED: myxml2.toString() == xmlin_stripwhite [./XML.as:983]
PASSED: myxml2.childNodes.length == 1 [./XML.as:987]
PASSED: !myxml2.childNodes[0].hasChildNodes() [./XML.as:988]
PASSED: myxml2.toString() == "<X1 />" [./XML.as:989]
PASSED: myxml2.childNodes.length == 1 [./XML.as:993]
PASSED: myxml2.childNodes[0].hasChildNodes() [./XML.as:994]
PASSED: myxml2.childNodes[0].childNodes[0].nodeType == 3 [./XML.as:995]
PASSED: myxml2.childNodes[0].childNodes[0].nodeValue == ' ' [./XML.as:996]
PASSED: myxml2.toString() == "<X1> </X1>" [./XML.as:997]
PASSED: myxml2.childNodes.length == 1 [./XML.as:1001]
PASSED: !myxml2.childNodes[0].hasChildNodes() [./XML.as:1002]
PASSED: myxml2.toString() == "<X1 />" [./XML.as:1003]
PASSED: myxml2.toString() == "<X1> t </X1>" [./XML.as:1007]
PASSED: myxml2.ignoreWhite == true [./XML.as:1010]
PASSED: myxml2.ignoreWhite == false [./XML.as:1013]
PASSED: h.toString() == "<open />" [./XML.as:1018]
PASSED: h.toString() == "<open />" [./XML.as:1021]
PASSED: h.toString() == "<open><open2 /></open>" [./XML.as:1024]
PASSED: h.toString() == "" [./XML.as:1027]
PASSED: h.toString() == "" [./XML.as:1030]
PASSED: h.toString() == "<open>&amp; &apos; &quot;</open>" [./XML.as:1033]
PASSED: h.toString() == "<open> </open>" [./XML.as:1037]
PASSED: h.toString() == "" [./XML.as:1040]
PASSED: h.toString() == "<open /><open />" [./XML.as:1043]
PASSED: h.toString() == "<open />" [./XML.as:1046]
PASSED: h.docTypeDecl == undefined [./XML.as:1050]
PASSED: h.xmlDecl == undefined [./XML.as:1051]
PASSED: h.toString() == "<!DOCTYPE HTML PUBLIC '-//W3C//DTD HTML 4.01 Transitional//EN' 'http://www.w3.org/TR/html4/loose.dtd'><tag />" [./XML.as:1054]
PASSED: h.docTypeDecl == "<!DOCTYPE HTML PUBLIC '-//W3C//DTD HTML 4.01 Transitional//EN' 'http://www.w3.org/TR/html4/loose.dtd'>" [./XML.as:1055]
PASSED: h.toString() == "<!DOcTyPE text><tag />" [./XML.as:1058]
PASSED: h.docTypeDecl == "<!DOcTyPE text>" [./XML.as:1059]
PASSED: h.toString() == "<?xml declaration goes here?><tag>content</tag>" [./XML.as:1062]
PASSED: h.xmlDecl == "<?xml declaration goes here?>" [./XML.as:1063]
PASSED: h.toString() == "<?xMl declaration goes here?><tag>content</tag>" [./XML.as:1066]
PASSED: h.xmlDecl == "<?xMl declaration goes here?>" [./XML.as:1067]
PASSED: h.toString() == "<?xMl declaration goes here?><!doctype d><tag>content</tag>" [./XML.as:1071]
PASSED: h.xmlDecl == "<?xMl declaration goes here?>" [./XML.as:1072]
PASSED: h.docTypeDecl == "<!doctype d>" [./XML.as:1073]
PASSED: h.toString() == "<?xMl declaration goes here?><!doctype d><tag /><tag>content</tag>" [./XML.as:1077]
PASSED: h.toString() == "<?xMl decl?><?XMl new?><!dOcType new><tag />" [./XML.as:1081]
PASSED: h.xmlDecl == "<?xMl decl?><?XMl new?>" [./XML.as:1082]
PASSED: typeof(h.xmlDecl) == "string" [./XML.as:1085]
PASSED: h.xmlDecl == "7" [./XML.as:1086]
PASSED: h.toString() == "7<!dOcType new><tag />" [./XML.as:1087]
PASSED: typeof(h.docTypeDecl) == "string" [./XML.as:1090]
PASSED: h.docTypeDecl == "98" [./XML.as:1091]
PASSED: h.toString() == "798<tag />" [./XML.as:1092]
PASSED: h.contentType == "application/x-www-form-urlencoded" [./XML.as:1094]
PASSED: typeof(h.contentType) == "string" [./XML.as:1097]
PASSED: h.contentType == "88" [./XML.as:1098]
PASSED: h.toString() == "798<tag />" [./XML.as:1099]
PASSED: typeof(h.contentType) == "string" [./XML.as:1102]
PASSED: h.contentType == "" [./XML.as:1103]
PASSED: h.toString() == "798<tag />" [./XML.as:1104]
PASSED: r.toString() == "1: å 2: ä 3: Ё 4: ई 5: ä" [./XML.as:1111]
PASSED: r.toString() == "1: å 2: L 3: &amp;#ee229; 4: &amp;#fee; 5: a" [./XML.as:1114]
PASSED: typeof(myxml.status) == 'number' [./XML.as:835]
PASSED: typeof(myxml.loaded) == 'boolean' [./XML.as:836]
PASSED: ! myxml.hasOwnProperty('status') [./XML.as:838]
PASSED: ! myxml.hasOwnProperty('loaded') [./XML.as:839]
gnash.xml successfully loaded
myxml status is 0
PASSED: myxml.status == 0 [./XML.as:851]
PASSED: myxml.loaded [./XML.as:852]
PASSED: typeof(myxml.loaded) == 'boolean' [./XML.as:858]
PASSED: myxml.loaded != loaded_backup [./XML.as:860]
PASSED: typeof(myxml.status) == 'number' [./XML.as:865]
FAILED: myxml.status != status_backup [./XML.as:866]
PASSED: typeof(myxml.attributes) == 'object' [./XML.as:872]
PASSED: ! myxml.attributes instanceof Object [./XML.as:873]
PASSED: typeof(myxml.attributes.__proto__) == 'undefined' [./XML.as:874]
PASSED: myxml.hasChildNodes() [./XML.as:876]
PASSED: myxml.nodeName == null [./XML.as:877]
PASSED: topnode.nodeName == 'XML' [./XML.as:884]
PASSED: topnode.attributes.attr1 == 'attr1 value' [./XML.as:885]
PASSED: myxml.childNodes.length == 3 [./XML.as:900]
PASSED: typeof(myxml.status) == 'number' [./XML.as:835]
PASSED: typeof(myxml.loaded) == 'boolean' [./XML.as:836]
PASSED: ! myxml.hasOwnProperty('status') [./XML.as:838]
PASSED: ! myxml.hasOwnProperty('loaded') [./XML.as:839]
gnash.xml successfully loaded
myxml status is 0
PASSED: myxml.status == 0 [./XML.as:851]
PASSED: myxml.loaded [./XML.as:852]
PASSED: typeof(myxml.loaded) == 'boolean' [./XML.as:858]
PASSED: myxml.loaded != loaded_backup [./XML.as:860]
PASSED: typeof(myxml.status) == 'number' [./XML.as:865]
FAILED: myxml.status != status_backup [./XML.as:866]
PASSED: typeof(myxml.attributes) == 'object' [./XML.as:872]
PASSED: ! myxml.attributes instanceof Object [./XML.as:873]
PASSED: typeof(myxml.attributes.__proto__) == 'undefined' [./XML.as:874]
PASSED: myxml.hasChildNodes() [./XML.as:876]
PASSED: myxml.nodeName == null [./XML.as:877]
PASSED: topnode.nodeName == 'XML' [./XML.as:884]
PASSED: topnode.attributes.attr1 == 'attr1 value' [./XML.as:885]
PASSED: myxml.childNodes.length == myxml.lastChildNodesCount [./XML.as:895]
PASSED: myxml.childNodes.length == 3 [./XML.as:900]
#passed: 470
#failed: 5
#total tests run: 475
