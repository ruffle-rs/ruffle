SWF6

[XMLNode.as debug-22403-05c7ba106]
PASSED: XMLNode.prototype.hasOwnProperty("appendChild") [./XMLNode.as:35]
PASSED: XMLNode.prototype.hasOwnProperty("cloneNode") [./XMLNode.as:36]
PASSED: XMLNode.prototype.hasOwnProperty("hasChildNodes") [./XMLNode.as:37]
PASSED: XMLNode.prototype.hasOwnProperty("insertBefore") [./XMLNode.as:38]
PASSED: XMLNode.prototype.hasOwnProperty("removeNode") [./XMLNode.as:39]
PASSED: XMLNode.prototype.hasOwnProperty("toString") [./XMLNode.as:40]
PASSED: XMLNode.prototype.hasOwnProperty("getPrefixForNamespace") [./XMLNode.as:42]
PASSED: XMLNode.prototype.hasOwnProperty("getNamespaceForPrefix") [./XMLNode.as:43]
PASSED: XMLNode.prototype.hasOwnProperty("firstChild") [./XMLNode.as:45]
PASSED: XMLNode.prototype.hasOwnProperty("lastChild") [./XMLNode.as:46]
PASSED: XMLNode.prototype.hasOwnProperty("namespaceURI") [./XMLNode.as:47]
PASSED: XMLNode.prototype.hasOwnProperty("localName") [./XMLNode.as:48]
PASSED: XMLNode.prototype.hasOwnProperty("attributes") [./XMLNode.as:49]
PASSED: XMLNode.prototype.hasOwnProperty("childNodes") [./XMLNode.as:50]
PASSED: XMLNode.prototype.hasOwnProperty("nextSibling") [./XMLNode.as:51]
PASSED: XMLNode.prototype.hasOwnProperty("nodeName") [./XMLNode.as:52]
PASSED: XMLNode.prototype.hasOwnProperty("nodeType") [./XMLNode.as:53]
PASSED: XMLNode.prototype.hasOwnProperty("nodeValue") [./XMLNode.as:54]
PASSED: XMLNode.prototype.hasOwnProperty("parentNode") [./XMLNode.as:55]
PASSED: XMLNode.prototype.hasOwnProperty("prefix") [./XMLNode.as:56]
PASSED: XMLNode.prototype.hasOwnProperty("previousSibling") [./XMLNode.as:57]
PASSED: typeof(XMLNode.prototype.attributes) == "undefined" [./XMLNode.as:59]
PASSED: doc [./XMLNode.as:63]
PASSED: typeOf(textnode) == 'object' [./XMLNode.as:65]
PASSED: typeof(textnode.attributes) == "object" [./XMLNode.as:67]
PASSED: textnode.attributes.toString() == undefined [./XMLNode.as:68]
PASSED: textnode.appendChild [./XMLNode.as:69]
PASSED: textnode.cloneNode [./XMLNode.as:70]
PASSED: textnode.hasChildNodes [./XMLNode.as:71]
PASSED: textnode.insertBefore [./XMLNode.as:72]
PASSED: textnode.removeNode [./XMLNode.as:73]
PASSED: textnode.toString [./XMLNode.as:74]
PASSED: textnode.nodeName == "foo" [./XMLNode.as:79]
FAILED: expected: "text content" obtained: null [./XMLNode.as:81]
PASSED: textnode.nodeValue == "bar" [./XMLNode.as:83]
PASSED: textnode.hasChildNodes() == false [./XMLNode.as:87]
PASSED: typeof(textnode.firstChild) == 'null' [./XMLNode.as:88]
PASSED: typeof(textnode.lastChild) == 'null' [./XMLNode.as:89]
PASSED: typeof(textnode.parentNode) == 'null' [./XMLNode.as:90]
PASSED: typeof(textnode.nextSibling) == 'null' [./XMLNode.as:91]
PASSED: typeof(textnode.previousSibling) == 'null' [./XMLNode.as:92]
PASSED: textnode1.nodeType == 3 [./XMLNode.as:101]
PASSED: node1.hasChildNodes() == true [./XMLNode.as:105]
PASSED: node1.firstChild.nodeValue == "first text node" [./XMLNode.as:107]
PASSED: typeof(node1.lastChild.nodeValue) == 'null' [./XMLNode.as:108]
PASSED: node2.lastChild.toString() == "second text node" [./XMLNode.as:109]
PASSED: typeOf(node1.childNodes) == "object" [./XMLNode.as:118]
PASSED: node1.childNodes.push [./XMLNode.as:119]
PASSED: node1.childNodes instanceOf Array [./XMLNode.as:120]
PASSED: node1.childNodes.length == 3 [./XMLNode.as:123]
PASSED: node1.childNodes.length == 4 [./XMLNode.as:127]
PASSED: !node1.childNodes[3] instanceOf XMLNode [./XMLNode.as:128]
PASSED: node1.childNodes.length == 5 [./XMLNode.as:133]
PASSED: node1.childNodes[4] instanceOf XMLNode [./XMLNode.as:134]
PASSED: node1.lastChild.toString() == "<node3>third text node</node3>" [./XMLNode.as:135]
PASSED: node1.childNodes[0].toString() == "first text node" [./XMLNode.as:138]
PASSED: node1.childNodes[2].toString() == "<node3>third text node</node3>" [./XMLNode.as:139]
PASSED: node1.childNodes[3].toString() == "not a node" [./XMLNode.as:140]
PASSED: node1.childNodes[0].toString() == "<an XMLNode />" [./XMLNode.as:142]
PASSED: node1.childNodes[2].toString() == "<node3>third text node</node3>" [./XMLNode.as:143]
PASSED: node1.childNodes[3].toString() == "first text node" [./XMLNode.as:144]
PASSED: node1.childNodes.length == 6 [./XMLNode.as:148]
PASSED: node1.childNodes[5] instanceOf Date [./XMLNode.as:149]
PASSED: node1.childNodes.childNodes[5].hasChildNodes() == undefined [./XMLNode.as:150]
PASSED: node1.childNodes.childNodes[5].hasChildNodes() == undefined [./XMLNode.as:153]
PASSED: node1.childNodes.length == 6 [./XMLNode.as:160]
PASSED: node1.childNodes.length == 7 [./XMLNode.as:162]
PASSED: node1.childNodes[6].toString() == "o.toString()" [./XMLNode.as:163]
PASSED: node1.lastChild != node1.childNodes[6] [./XMLNode.as:166]
PASSED: node1.lastChild.nodeName == "node3" [./XMLNode.as:167]
PASSED: node1.firstChild.toString() == "first text node" [./XMLNode.as:168]
PASSED: node1.lastChild.toString() == "<4node />" [./XMLNode.as:174]
PASSED: node1.childNodes.length == 4 [./XMLNode.as:175]
PASSED: node1.childNodes[node1.childNodes.length - 1].toString() == "<4node />" [./XMLNode.as:176]
PASSED: node1.lastChild.toString() == "<4node />" [./XMLNode.as:181]
PASSED: node1.childNodes[node1.childNodes.length - 1].toString() == "first text node" [./XMLNode.as:182]
PASSED: node1.firstChild.nodeValue == "first text node" [./XMLNode.as:187]
PASSED: typeof(node1.lastChild.nodeValue) == 'null' [./XMLNode.as:188]
PASSED: typeof(node1.firstChild.nodeName) == "null" [./XMLNode.as:190]
PASSED: node1.lastChild.nodeName == "4node" [./XMLNode.as:191]
PASSED: node2.previousSibling.nodeValue == "first text node" [./XMLNode.as:193]
PASSED: node2.attributes == undefined [./XMLNode.as:201]
PASSED: typeof(node2.attributes) == "object" [./XMLNode.as:206]
PASSED: node2.attributes[3] == "a3" [./XMLNode.as:208]
PASSED: node2.attributes["3"] == "a3" [./XMLNode.as:209]
PASSED: node2.attributes.a == "aa" [./XMLNode.as:211]
PASSED: node2.attributes["a"] == "aa" [./XMLNode.as:212]
PASSED: node2.toString() == '<node2 a="aa" 3="a3">second text node</node2>' [./XMLNode.as:213]
PASSED: node2.toString() == '<node2 a="aa" 3="a3">second text node</node2>' [./XMLNode.as:217]
PASSED: node77.toString() == '<tag a1="at1" />' [./XMLNode.as:222]
PASSED: node77.toString() == '<tag a1="at1" />' [./XMLNode.as:224]
PASSED: node77.toString() == '<tag $="$" 5="5" f="f" y="y" c="c" x="x2" z="z" a1="at1" />' [./XMLNode.as:236]
PASSED: ns.nodeName == "tag" [./XMLNode.as:243]
PASSED: ns.attributes["att"] == "u" [./XMLNode.as:244]
PASSED: ns.attributes["xmlns"] == "standard" [./XMLNode.as:245]
PASSED: ns.namespaceURI == "standard" [./XMLNode.as:246]
PASSED: ns.getNamespaceForPrefix() == undefined [./XMLNode.as:247]
PASSED: ns.getNamespaceForPrefix("") == "standard" [./XMLNode.as:248]
PASSED: ns.getPrefixForNamespace("standard") == "" [./XMLNode.as:249]
PASSED: ns.namespaceURI == "standard" [./XMLNode.as:252]
PASSED: ns.getNamespaceForPrefix("") == "standard2" [./XMLNode.as:253]
PASSED: ns.nodeName == null [./XMLNode.as:256]
PASSED: ns.nodeValue == "text" [./XMLNode.as:257]
PASSED: ns.namespaceURI == null [./XMLNode.as:258]
PASSED: ns.prefix == null [./XMLNode.as:259]
PASSED: ns.namespaceURI == "" [./XMLNode.as:263]
PASSED: ns.getNamespaceForPrefix() == undefined [./XMLNode.as:264]
PASSED: ns.getNamespaceForPrefix("t") == "standard" [./XMLNode.as:265]
PASSED: ns.getPrefixForNamespace("standard") == "t" [./XMLNode.as:266]
PASSED: n.nodeName == "tag" [./XMLNode.as:271]
PASSED: n.namespaceURI == "" [./XMLNode.as:272]
PASSED: n.getNamespaceForPrefix("r") == undefined [./XMLNode.as:273]
PASSED: n.getPrefixForNamespace("nsr") == undefined [./XMLNode.as:274]
PASSED: n.getNamespaceForPrefix() == undefined [./XMLNode.as:275]
PASSED: n.getNamespaceForPrefix("t") == "nst" [./XMLNode.as:276]
PASSED: n.getPrefixForNamespace("nst") == "t" [./XMLNode.as:277]
PASSED: n.nodeName == "tag2" [./XMLNode.as:280]
PASSED: n.namespaceURI == "nss" [./XMLNode.as:281]
PASSED: n.getNamespaceForPrefix() == undefined [./XMLNode.as:282]
PASSED: n.getNamespaceForPrefix("r") == undefined [./XMLNode.as:283]
PASSED: n.getPrefixForNamespace("nsr") == undefined [./XMLNode.as:284]
PASSED: n.getNamespaceForPrefix("t") == "nst" [./XMLNode.as:285]
PASSED: n.getPrefixForNamespace("nst") == "t" [./XMLNode.as:286]
PASSED: n.nodeName == "tag3" [./XMLNode.as:289]
PASSED: n.namespaceURI == "nss" [./XMLNode.as:290]
PASSED: n.getNamespaceForPrefix() == undefined [./XMLNode.as:291]
PASSED: n.getNamespaceForPrefix("r") == "nsr" [./XMLNode.as:292]
PASSED: n.getPrefixForNamespace("nsr") == "r" [./XMLNode.as:293]
PASSED: n.getNamespaceForPrefix("t") == "nst" [./XMLNode.as:294]
PASSED: n.getPrefixForNamespace("nst") == "t" [./XMLNode.as:295]
PASSED: n.nodeName == "tag3" [./XMLNode.as:301]
PASSED: n.namespaceURI == "nsr" [./XMLNode.as:302]
PASSED: n.getPrefixForNamespace("nsr") == "" [./XMLNode.as:303]
PASSED: n.getNamespaceForPrefix() == undefined [./XMLNode.as:304]
PASSED: n.getPrefixForNamespace("nst") == "" [./XMLNode.as:305]
PASSED: ns.nodeName == "tag" [./XMLNode.as:312]
PASSED: ns.attributes["xmlns"] == "standard" [./XMLNode.as:313]
PASSED: ns.namespaceURI == "standard" [./XMLNode.as:314]
PASSED: ns.getNamespaceForPrefix("") == "standard" [./XMLNode.as:315]
PASSED: ns.getPrefixForNamespace("standard") == "" [./XMLNode.as:317]
PASSED: ns.getPrefixForNamespace("standard2") == undefined [./XMLNode.as:318]
PASSED: ns.nodeName == "tag" [./XMLNode.as:324]
PASSED: ns.attributes["xmlns"] == undefined [./XMLNode.as:325]
PASSED: ns.attributes["xmlns:n1"] == "ns1" [./XMLNode.as:326]
PASSED: ns.namespaceURI == "" [./XMLNode.as:327]
PASSED: ns.getNamespaceForPrefix("n1") == "ns1" [./XMLNode.as:328]
PASSED: ns.getPrefixForNamespace("ns1") == "n1" [./XMLNode.as:329]
PASSED: ns.getPrefixForNamespace("ns2") == undefined [./XMLNode.as:330]
PASSED: ns.attributes["xmlns:n1"] == "ns2" [./XMLNode.as:333]
PASSED: ns.getNamespaceForPrefix("n1") == "ns2" [./XMLNode.as:334]
PASSED: ns.getPrefixForNamespace("ns1") == undefined [./XMLNode.as:335]
PASSED: ns.getPrefixForNamespace("ns2") == "n1" [./XMLNode.as:336]
PASSED: ns.nodeName == "tag" [./XMLNode.as:341]
PASSED: ns.attributes["xmlns"] == undefined [./XMLNode.as:342]
PASSED: ns.namespaceURI == "" [./XMLNode.as:343]
PASSED: ns.attributes["xmlns"] == "nss" [./XMLNode.as:345]
PASSED: ns.namespaceURI == "" [./XMLNode.as:346]
PASSED: ns.nodeName == "fr:tag" [./XMLNode.as:351]
PASSED: ns.localName == "tag" [./XMLNode.as:352]
PASSED: ns.prefix == "fr" [./XMLNode.as:353]
PASSED: ns.nodeName == "fr:pr:tag" [./XMLNode.as:357]
PASSED: ns.localName == "pr:tag" [./XMLNode.as:358]
PASSED: ns.prefix == "fr" [./XMLNode.as:359]
PASSED: ns.nodeName == ":fr:tag" [./XMLNode.as:363]
PASSED: ns.localName == "fr:tag" [./XMLNode.as:364]
PASSED: ns.prefix == "" [./XMLNode.as:365]
PASSED: ns.nodeName == ":tag" [./XMLNode.as:369]
PASSED: ns.localName == "tag" [./XMLNode.as:370]
PASSED: ns.prefix == "" [./XMLNode.as:371]
PASSED: ns.nodeName == "tag:" [./XMLNode.as:375]
PASSED: ns.localName == "tag:" [./XMLNode.as:376]
PASSED: ns.prefix == "" [./XMLNode.as:377]
PASSED: ns.nodeName == "tag" [./XMLNode.as:381]
PASSED: ns.localName == "tag" [./XMLNode.as:382]
PASSED: ns.prefix == "" [./XMLNode.as:383]
PASSED: xn.toString() == "< />" [./XMLNode.as:389]
PASSED: xn.toString() == "" [./XMLNode.as:392]
PASSED: xn.toString() == "" [./XMLNode.as:395]
PASSED: xn.toString() == "" [./XMLNode.as:398]
PASSED: xn.toString() == "" [./XMLNode.as:401]
PASSED: xn.toString() == "" [./XMLNode.as:404]
PASSED: xn.toString() == "" [./XMLNode.as:407]
PASSED: xl2.parentNode == xl1 [./XMLNode.as:425]
