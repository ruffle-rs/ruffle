SWF7

[array.as debug-22403-05c7ba106]
PASSED: typeof(Array) == 'function' [./array.as:26]
PASSED: Array.CASEINSENSITIVE == 1 [./array.as:27]
PASSED: Array.DESCENDING == 2 [./array.as:28]
PASSED: Array.UNIQUESORT == 4 [./array.as:29]
PASSED: Array.RETURNINDEXEDARRAY == 8 [./array.as:30]
PASSED: Array.NUMERIC == 16 [./array.as:31]
PASSED: typeof(Array.prototype) == 'object' [./array.as:32]
PASSED: typeof(Array.prototype.__proto__) == 'object' [./array.as:33]
PASSED: Array.prototype.__proto__ == Object.prototype [./array.as:34]
PASSED: typeof(Array.prototype.concat) == 'function' [./array.as:35]
PASSED: typeof(Array.prototype.join) == 'function' [./array.as:36]
PASSED: typeof(Array.prototype.pop) == 'function' [./array.as:37]
PASSED: typeof(Array.prototype.push) == 'function' [./array.as:38]
PASSED: typeof(Array.prototype.reverse) == 'function' [./array.as:39]
PASSED: typeof(Array.prototype.shift) == 'function' [./array.as:40]
PASSED: typeof(Array.prototype.slice) == 'function' [./array.as:41]
PASSED: typeof(Array.prototype.sort) == 'function' [./array.as:42]
PASSED: typeof(Array.prototype.sortOn) == 'function' [./array.as:43]
PASSED: typeof(Array.prototype.splice) == 'function' [./array.as:44]
PASSED: typeof(Array.prototype.unshift) == 'function' [./array.as:45]
PASSED: typeof(Array.prototype.toString) == 'function' [./array.as:46]
PASSED: typeof(Array.prototype.length) == 'undefined' [./array.as:47]
PASSED: typeof(Array.prototype.size) == 'undefined' [./array.as:48]
PASSED: typeof(Array.prototype.CASEINSENSITIVE) == 'undefined' [./array.as:49]
PASSED: typeof(Array.prototype.DESCENDING) == 'undefined' [./array.as:50]
PASSED: typeof(Array.prototype.UNIQUESORT) == 'undefined' [./array.as:51]
PASSED: typeof(Array.prototype.RETURNINDEXEDARRAY) == 'undefined' [./array.as:52]
PASSED: typeof(Array.prototype.NUMERIC) == 'undefined' [./array.as:53]
PASSED: Array.hasOwnProperty('CASEINSENSITIVE') [./array.as:55]
PASSED: Array.hasOwnProperty('DESCENDING') [./array.as:56]
PASSED: Array.hasOwnProperty('UNIQUESORT') [./array.as:57]
PASSED: Array.hasOwnProperty('RETURNINDEXEDARRAY') [./array.as:58]
PASSED: Array.hasOwnProperty('NUMERIC') [./array.as:59]
PASSED: Array.prototype.hasOwnProperty('concat') [./array.as:60]
PASSED: Array.prototype.hasOwnProperty('join') [./array.as:61]
PASSED: Array.prototype.hasOwnProperty('pop') [./array.as:62]
PASSED: Array.prototype.hasOwnProperty('push') [./array.as:63]
PASSED: Array.prototype.hasOwnProperty('reverse') [./array.as:64]
PASSED: Array.prototype.hasOwnProperty('shift') [./array.as:65]
PASSED: Array.prototype.hasOwnProperty('slice') [./array.as:66]
PASSED: Array.prototype.hasOwnProperty('sort') [./array.as:67]
PASSED: Array.prototype.hasOwnProperty('sortOn') [./array.as:68]
PASSED: Array.prototype.hasOwnProperty('splice') [./array.as:69]
PASSED: Array.prototype.hasOwnProperty('unshift') [./array.as:70]
PASSED: Array.prototype.hasOwnProperty('toString') [./array.as:71]
PASSED: !Array.prototype.hasOwnProperty('length') [./array.as:72]
PASSED: !Array.prototype.hasOwnProperty('valueOf') [./array.as:73]
PASSED: !Array.prototype.hasOwnProperty('size') [./array.as:74]
PASSED: typeof(Array()) == 'object' [./array.as:77]
PASSED: typeof(new Array()) == 'object' [./array.as:78]
PASSED: typeof(f) == 'function' [./array.as:80]
PASSED: typeof(a) == 'object' [./array.as:82]
PASSED: typeof(a.pop) == 'function' [./array.as:83]
PASSED: typeof(a.size) == 'undefined' [./array.as:101]
PASSED: a instanceOf Array [./array.as:103]
PASSED: a.length == 3 [./array.as:104]
PASSED: a.hasOwnProperty('length') [./array.as:106]
PASSED: typeof(primitiveArrayValue) == 'object' [./array.as:110]
PASSED: primitiveArrayValue == a [./array.as:111]
PASSED: primitiveArrayValue === a [./array.as:113]
PASSED: a != undefined [./array.as:119]
PASSED: typeof(a) == "object" [./array.as:120]
PASSED: a != b [./array.as:123]
PASSED: tmp.toString() == "undefined,undefined" [./array.as:128]
PASSED: tmp.length == 1 [./array.as:134]
PASSED: a.length == 3 [./array.as:136]
PASSED: a[2] == 12 [./array.as:137]
PASSED: popped == 12 [./array.as:139]
PASSED: a[2] == undefined [./array.as:140]
PASSED: a[1] == "asdf" [./array.as:141]
PASSED: a[1] == 551 [./array.as:143]
PASSED: a[0] == 200 [./array.as:145]
PASSED: a.toString() == "200,551" [./array.as:146]
PASSED: a.length == 5 [./array.as:148]
PASSED: a[100] == undefined [./array.as:149]
PASSED: a[5] == undefined [./array.as:150]
PASSED: a[4] == 9 [./array.as:151]
PASSED: a.join() == "200,551,7,8,9" [./array.as:152]
PASSED: a.join() == "9,8,7,551,200" [./array.as:154]
PASSED: Array.prototype.join.apply(a) == "9,8,7,551,200" [./array.as:156]
PASSED: a.join.apply(a) == "9,8,7,551,200" [./array.as:157]
PASSED: a.join("test") == "9test8test7test551test200" [./array.as:163]
PASSED: typeof(Array.UNIQUE) == 'undefined' [./array.as:166]
PASSED: (undefined|1) == 1 [./array.as:172]
PASSED: (1|undefined) == 1 [./array.as:173]
PASSED: (undefined&1) == 0 [./array.as:174]
PASSED: (1&undefined) == 0 [./array.as:175]
PASSED: (undefined^1) == 1 [./array.as:176]
PASSED: (1^undefined) == 1 [./array.as:177]
PASSED: Array.UNIQUE | Array.CASEINSENSITIVE | Array.RETURNINDEXEDARRAY == 9 [./array.as:180]
PASSED: a.toString() == "200,551,7,8,9" [./array.as:184]
PASSED: a.toString() == "7,7,7,7,7,8,8,8,9,200,200,200,200,551,551" [./array.as:188]
PASSED: a.toString() == "7,7,7,7,7,8,8,8,9,200,200,200,200,551,551" [./array.as:191]
PASSED: trysortarray.toString() == "alphabet,But,capitalization,Different" [./array.as:196]
PASSED: trysortarray.toString() == "But,Different,alphabet,capitalization" [./array.as:198]
PASSED: gaparray.length == 17 [./array.as:203]
PASSED: gaparray[4] == '4' [./array.as:204]
PASSED: gaparray[16] == '16' [./array.as:205]
PASSED: gaparray.hasOwnProperty('4') [./array.as:207]
PASSED: gaparray.hasOwnProperty('16') [./array.as:208]
PASSED: !gaparray.hasOwnProperty('0') [./array.as:209]
PASSED: !gaparray.hasOwnProperty('1') [./array.as:210]
PASSED: gaparray.length == 17 [./array.as:213]
PASSED: gaparray[0] == '16' [./array.as:218]
PASSED: gaparray[1] == '4' [./array.as:219]
PASSED: gaparray[2] == undefined [./array.as:221]
PASSED: gaparray[3] == undefined [./array.as:222]
PASSED: gaparray[4] == undefined [./array.as:223]
PASSED: gaparray[5] == undefined [./array.as:224]
PASSED: gaparray[6] == undefined [./array.as:225]
PASSED: gaparray[7] == undefined [./array.as:226]
PASSED: gaparray[8] == undefined [./array.as:227]
PASSED: gaparray[9] == undefined [./array.as:228]
PASSED: gaparray[10] == undefined [./array.as:229]
PASSED: gaparray[11] == undefined [./array.as:230]
PASSED: gaparray[12] == undefined [./array.as:231]
PASSED: gaparray[13] == undefined [./array.as:232]
PASSED: gaparray[14] == undefined [./array.as:233]
PASSED: gaparray[15] == undefined [./array.as:238]
PASSED: gaparray[16] == undefined [./array.as:239]
PASSED: gaparray.hasOwnProperty('16') [./array.as:249]
PASSED: gaparray.hasOwnProperty('4') [./array.as:250]
PASSED: gaparray.hasOwnProperty('1') [./array.as:251]
PASSED: gaparray.hasOwnProperty('0') [./array.as:252]
PASSED: gaparray.hasOwnProperty('2') [./array.as:253]
PASSED: tmp.length == '5' [./array.as:265]
PASSED: tmp[0] == '0' [./array.as:266]
PASSED: tmp[1] == '1' [./array.as:267]
PASSED: tmp[2] == '16' [./array.as:268]
PASSED: tmp[3] == '2' [./array.as:269]
PASSED: tmp[4] == '4' [./array.as:270]
PASSED: trysortarray.toString() == "But,Different,alphabet,capitalization" [./array.as:293]
PASSED: trysortarray.toString() == "But,alphabet,Different,capitalization" [./array.as:295]
PASSED: typeof(testCmpThis) == 'undefined' [./array.as:296]
PASSED: testCmpCalls == 7 [./array.as:297]
PASSED: trysortarray.toString() == "But,alphabet,Different,capitalization" [./array.as:301]
PASSED: trysortarray.toString() == "alphabet,Different,capitalization,But" [./array.as:305]
PASSED: trysortarray.toString() == "alphabet,Different,capitalization,But" [./array.as:309]
PASSED: trysortarray.toString() == "alphabet,Different,capitalization,But" [./array.as:313]
PASSED: trysortarray.length == 0 [./array.as:317]
PASSED: trysortarray.toString() == "1,2,3,4" [./array.as:321]
PASSED: trysortarray.length == 4 [./array.as:322]
PASSED: trysortarray.length == 4 [./array.as:324]
PASSED: trysortarray.toString() == "2,3,4,1" [./array.as:325]
PASSED: indexedarray.length == 7 [./array.as:336]
PASSED: firstRandom != secondRandom [./array.as:344]
PASSED: typeof(c) == "object" [./array.as:351]
PASSED: c[0] == "zero" [./array.as:356]
PASSED: c[1] == "one" [./array.as:357]
PASSED: c[1.1] == "one point one" [./array.as:358]
PASSED: c[1.9] == undefined [./array.as:359]
PASSED: c[-3] == "minus three" [./array.as:360]
PASSED: c[-3.7] == undefined [./array.as:361]
PASSED: c[0] == "zero" [./array.as:364]
PASSED: c[1] == "one" [./array.as:365]
PASSED: c[0] == undefined [./array.as:370]
PASSED: c[1] == undefined [./array.as:371]
PASSED: c[2] == undefined [./array.as:372]
PASSED: c[3] == undefined [./array.as:373]
PASSED: c[1.1] == "one point one" [./array.as:374]
PASSED: c[-2147483649] == "too low" [./array.as:375]
PASSED: c[int(-2147483649)] == undefined [./array.as:377]
PASSED: c[-2147483649] == "too low" [./array.as:380]
PASSED: c[2147483649] == "too high" [./array.as:381]
PASSED: c[1] == undefined [./array.as:382]
PASSED: c[2] == undefined [./array.as:383]
PASSED: c[3] == undefined [./array.as:384]
PASSED: c.length == -2147483646 [./array.as:386]
PASSED: str == "2147483649: too high; -2147483649: too low; -2147483648: lowest int; -3: minus three; 1.1: one point one; " [./array.as:394]
PASSED: c[0] == "zero" [./array.as:400]
PASSED: c[1] == "one" [./array.as:401]
PASSED: c[0] == "zero" [./array.as:405]
PASSED: c[1] == "one" [./array.as:406]
PASSED: c[0xffffffff] == undefined [./array.as:407]
PASSED: c[0xffffffff + 1] == "too high" [./array.as:408]
PASSED: c[0xfffffffffffffffff] == "much too high" [./array.as:411]
PASSED: c[0] == "zero" [./array.as:415]
PASSED: c[1] == "one" [./array.as:416]
PASSED: c.length == 2147483647 [./array.as:418]
PASSED: str == "-2147483650: still lower; 2.95147905179353e+20: much too high; 4294967296: too high; -3: minus three; 1.1: one point one; 3: three; 2: two; 1: one; 0: zero; " [./array.as:427]
PASSED: sparse[3] == 3 [./array.as:433]
PASSED: sparse[3] == 3 [./array.as:435]
PASSED: c.length == 0 [./array.as:439]
PASSED: typeof(c['']) == 'undefined' [./array.as:440]
PASSED: c.length == 0 [./array.as:446]
PASSED: c[2.2] == 2 [./array.as:448]
PASSED: popped == 12 [./array.as:455]
PASSED: popped == "asdf" [./array.as:457]
PASSED: popped == 551 [./array.as:459]
PASSED: popped == undefined [./array.as:462]
PASSED: b.length == 0 [./array.as:464]
PASSED: b.toString() == "2,4" [./array.as:469]
PASSED: b.toString() == "" [./array.as:472]
PASSED: a.length == 1 [./array.as:479]
PASSED: typeof(ret) == 'undefined' [./array.as:481]
PASSED: a.length == 0 [./array.as:482]
PASSED: a.length == 2 [./array.as:484]
PASSED: typeof(ret) == 'undefined' [./array.as:486]
PASSED: a.length == 1 [./array.as:487]
PASSED: typeof(ret) == 'string' [./array.as:489]
PASSED: ret == 'a' [./array.as:490]
PASSED: a.length == 0 [./array.as:491]
PASSED: b.toString() == "" [./array.as:499]
PASSED: count == 1 [./array.as:505]
PASSED: !sparse.hasOwnProperty(0) [./array.as:507]
PASSED: sparse.hasOwnProperty(5) [./array.as:508]
PASSED: sparse.toString() == "undefined,undefined,undefined,undefined,undefined,5" [./array.as:513]
PASSED: count == 6 [./array.as:517]
PASSED: sparse.hasOwnProperty(0) [./array.as:519]
PASSED: sparse.hasOwnProperty(5) [./array.as:520]
PASSED: sparse.toString() == "5,undefined,undefined,undefined,undefined,undefined" [./array.as:525]
PASSED: s == "undefined^1^undefined^3" [./array.as:540]
PASSED: bclone.length == 0 [./array.as:549]
PASSED: b.length == 0 [./array.as:550]
PASSED: concatted.join() == "0,1,2,3,4,5,6" [./array.as:553]
PASSED: concatted[4] == 4 [./array.as:554]
PASSED: basic.toString() == "0,1,2" [./array.as:555]
PASSED: portion.toString() == "2,3,4" [./array.as:557]
PASSED: portion.toString() == "3,4" [./array.as:559]
PASSED: portion.toString() == "4" [./array.as:561]
PASSED: portion.length == 1 [./array.as:562]
PASSED: portion.toString() == "5" [./array.as:564]
PASSED: portion.toString() == "5,6" [./array.as:566]
PASSED: mixed.toString() == "5,6,7,8,9" [./array.as:568]
PASSED: mixed.toString() == "5,6,7,8,9,10,11,12,13" [./array.as:570]
PASSED: portion.toString() == "" [./array.as:574]
PASSED: portion.toString() == "0,1,2,3,4,5,6" [./array.as:576]
PASSED: portion.toString() == "0,1,2" [./array.as:578]
PASSED: portion.toString() == "" [./array.as:580]
PASSED: portion.toString() == "0,1" [./array.as:584]
PASSED: count == 1 [./array.as:599]
PASSED: count == 1 [./array.as:602]
PASSED: count == 7 [./array.as:605]
PASSED: count == 5 [./array.as:609]
PASSED: ary.toString() == "0,1,2,3,4,5" [./array.as:616]
PASSED: ary.toString() == "0,1,2,3,4,5" [./array.as:620]
PASSED: typeof(spliced) == "undefined" [./array.as:621]
PASSED: ary.toString() == "1,2,3,4,5" [./array.as:625]
PASSED: spliced.toString() == "0" [./array.as:626]
PASSED: ary.toString() == "1,3,4,5" [./array.as:628]
PASSED: spliced.toString() == "2" [./array.as:629]
PASSED: ary.toString() == "1,3,4" [./array.as:633]
PASSED: spliced.toString() == "5" [./array.as:634]
PASSED: ary.toString() == "1,4" [./array.as:636]
PASSED: spliced.toString() == "3" [./array.as:637]
PASSED: ary.toString() == "1,4" [./array.as:641]
PASSED: spliced.toString() == "" [./array.as:642]
PASSED: ary.toString() == "1,4" [./array.as:644]
PASSED: spliced.toString() == "" [./array.as:645]
PASSED: ary.toString() == "4" [./array.as:649]
PASSED: spliced.toString() == "1" [./array.as:650]
PASSED: ary.toString() == "0,1,2,3,4,5,6,7,8" [./array.as:657]
PASSED: spliced.toString() == "" [./array.as:658]
PASSED: ary.toString() == "0,1" [./array.as:662]
PASSED: spliced.toString() == "2,3,4,5,6,7,8" [./array.as:663]
PASSED: ary.toString() == "2,3,4,5,6" [./array.as:666]
PASSED: spliced.toString() == "7,8" [./array.as:667]
PASSED: typeof(spliced) == 'undefined' [./array.as:671]
PASSED: ary.toString() == "2,3,4,5,6" [./array.as:672]
PASSED: typeof(spliced) == 'undefined' [./array.as:674]
PASSED: ary.toString() == "2,3,4,5,6" [./array.as:675]
PASSED: typeof(spliced) == 'undefined' [./array.as:677]
PASSED: ary.toString() == "2,3,4,5,6" [./array.as:678]
PASSED: typeof(spliced) == 'undefined' [./array.as:680]
PASSED: ary.toString() == "2,3,4,5,6" [./array.as:681]
PASSED: ary.toString() == "2,a,b,c,4,5,6" [./array.as:685]
PASSED: spliced.toString() == '3' [./array.as:686]
PASSED: ary.toString() == "2,a,b,8,5,6" [./array.as:688]
PASSED: spliced.toString() == 'c,4' [./array.as:689]
PASSED: ary.toString() == "2,a,b,10,11,12,8,5,6" [./array.as:693]
PASSED: spliced.toString() == '' [./array.as:694]
PASSED: ary.toString() == "1,2,3,4,5,6" [./array.as:698]
PASSED: ary.length == 4 [./array.as:699]
PASSED: spliced.toString() == '2,a,b,10,11,12,8' [./array.as:700]
PASSED: spliced.toString() == "3,4,5,6" [./array.as:704]
PASSED: spliced.toString() == "1,2" [./array.as:706]
PASSED: ary.length == 8 [./array.as:711]
PASSED: count == 2 [./array.as:713]
PASSED: ary.length == 8 [./array.as:716]
PASSED: count == 8 [./array.as:718]
PASSED: ary.length == 9 [./array.as:722]
PASSED: count == 9 [./array.as:724]
PASSED: ary[3] == 3 [./array.as:725]
PASSED: ary[2] == 2 [./array.as:726]
PASSED: count == 8 [./array.as:731]
PASSED: count == 1 [./array.as:733]
PASSED: c.constructor == Array [./array.as:740]
PASSED: a instanceOf Array [./array.as:741]
PASSED: typeof(c) == "object" [./array.as:742]
PASSED: c.length == 10 [./array.as:743]
PASSED: c[5] == undefined [./array.as:744]
PASSED: c[1000] == 283 [./array.as:746]
PASSED: c[1001] == undefined [./array.as:747]
PASSED: c[999] == undefined [./array.as:748]
PASSED: c.length == 1001 [./array.as:749]
PASSED: c[8] == 'eight' [./array.as:754]
PASSED: c.length == 2 [./array.as:756]
PASSED: c[8] == undefined [./array.as:757]
PASSED: c[0] == 'zero' [./array.as:758]
PASSED: c.length == -1 [./array.as:761]
PASSED: c[0] == undefined [./array.as:762]
PASSED: c.length == 3 [./array.as:769]
PASSED: c[0] == 10 [./array.as:770]
PASSED: c[1] == 20 [./array.as:771]
PASSED: c[2] == 30 [./array.as:772]
PASSED: c.hasOwnProperty('0') [./array.as:774]
PASSED: c.hasOwnProperty('1') [./array.as:775]
PASSED: c.hasOwnProperty('2') [./array.as:776]
PASSED: delete c[1] [./array.as:778]
PASSED: c.length == 3 [./array.as:779]
PASSED: c[0] == 10 [./array.as:780]
PASSED: typeof(c[1]) == 'undefined' [./array.as:781]
PASSED: c[2] == 30 [./array.as:782]
PASSED: c.hasOwnProperty('0') [./array.as:784]
PASSED: !c.hasOwnProperty('1') [./array.as:785]
PASSED: c.hasOwnProperty('2') [./array.as:786]
PASSED: c.length == 11 [./array.as:790]
PASSED: ! delete c[2] [./array.as:792]
PASSED: c[2] == 30 [./array.as:793]
PASSED: c[2] == 30 [./array.as:795]
PASSED: typeof(c[10]) == 'undefined' [./array.as:796]
PASSED: typeof(c[10]) == 'undefined' [./array.as:798]
PASSED: r.toString() == ",Jedit,ed,emacs,nano,vi" [./array.as:846]
PASSED: a.toString() == ",Jedit,ed,emacs,nano,vi" [./array.as:847]
PASSED: a.toString() == ",ed,emacs,Jedit,nano,vi" [./array.as:849]
PASSED: a.toString() == ",Jedit,ed,emacs,nano,vi" [./array.as:851]
PASSED: a.toString() == ",ed,emacs,Jedit,nano,vi" [./array.as:853]
PASSED: a.toString() == ",Jedit,ed,emacs,nano,vi" [./array.as:855]
PASSED: r.toString() == "vi,nano,emacs,ed,Jedit," [./array.as:857]
PASSED: a.toString() == "vi,nano,emacs,ed,Jedit," [./array.as:858]
PASSED: r.toString() == "-2,-7,-9,0,1,3,5,8" [./array.as:861]
PASSED: b.toString() == "-2,-7,-9,0,1,3,5,8" [./array.as:862]
PASSED: b.toString() == "-9,-7,-2,0,1,3,5,8" [./array.as:864]
PASSED: b.toString() == "-2,-7,-9,0,1,3,5,8" [./array.as:866]
PASSED: b.toString() == "8,5,3,1,0,-9,-7,-2" [./array.as:868]
PASSED: r.toString() == "8,5,3,1,0,-2,-7,-9" [./array.as:870]
PASSED: b.toString() == "8,5,3,1,0,-2,-7,-9" [./array.as:871]
PASSED: r.toString() == "8,5,3,1,0,-2,-7,-9" [./array.as:873]
PASSED: b.toString() == "8,5,3,1,0,-2,-7,-9" [./array.as:874]
PASSED: b.toString() == "8,5,3,1,0,-2,-7,-9" [./array.as:876]
PASSED: b.toString() == "8,5,3,1,0,-2,-7,-9" [./array.as:878]
PASSED: r.toString() == "-0.5,-3.7,0,0.001,2,7.2,8.35,Infinity" [./array.as:881]
PASSED: c.toString() == "-0.5,-3.7,0,0.001,2,7.2,8.35,Infinity" [./array.as:882]
PASSED: c.toString() == "-0.5,-3.7,0,0.001,2,7.2,8.35,Infinity" [./array.as:884]
PASSED: c.toString() == "-3.7,-0.5,0,0.001,2,7.2,8.35,Infinity" [./array.as:886]
PASSED: c.toString() == "-0.5,-3.7,0,0.001,2,7.2,8.35,Infinity" [./array.as:888]
PASSED: c.toString() == "Infinity,8.35,7.2,2,0.001,0,-0.5,-3.7" [./array.as:890]
PASSED: r.toString() == "" [./array.as:893]
PASSED: d.toString() == "" [./array.as:894]
PASSED: d.toString() == "" [./array.as:896]
PASSED: d.toString() == "" [./array.as:898]
PASSED: r.toString() == "singleton" [./array.as:901]
PASSED: e.toString() == "singleton" [./array.as:902]
PASSED: e.toString() == "singleton" [./array.as:904]
PASSED: e.toString() == "singleton" [./array.as:906]
PASSED: r.toString() == "Name,Name,Year" [./array.as:909]
PASSED: f.toString() == "Name,Name,Year" [./array.as:910]
PASSED: r.toString() == "0" [./array.as:912]
PASSED: f.toString() == "Year,Name,Name" [./array.as:914]
PASSED: r.toString() == "5,4,3,2,1,0" [./array.as:919]
PASSED: a.toString() == "vi,nano,emacs,ed,Jedit," [./array.as:920]
PASSED: r.toString() == "0,1,4,2,3,5" [./array.as:922]
PASSED: a.toString() == "vi,nano,emacs,ed,Jedit," [./array.as:923]
PASSED: r.toString() == "5,6,7,4,3,2,1,0" [./array.as:925]
PASSED: r.toString() == "7,6,5,4,3,2,1,0" [./array.as:927]
PASSED: r.toString() == "0,1,2,3,4,7,6,5" [./array.as:929]
PASSED: r.toString() == "6,7,5,4,3,2,1,0" [./array.as:931]
PASSED: r.toString() == "7,6,5,4,3,2,1,0" [./array.as:933]
PASSED: r.toString() == "0,1,2,3,4,5,7,6" [./array.as:935]
PASSED: r.toString() == "" [./array.as:937]
PASSED: d.toString() == "" [./array.as:938]
PASSED: r.toString() == "" [./array.as:940]
PASSED: d.toString() == "" [./array.as:941]
PASSED: r.toString() == "0" [./array.as:943]
PASSED: e.toString() == "singleton" [./array.as:944]
PASSED: r.toString() == "0" [./array.as:946]
PASSED: r.toString() == ",vi,ed,nano,emacs,Jedit" [./array.as:950]
PASSED: a.toString() == ",vi,ed,nano,emacs,Jedit" [./array.as:951]
PASSED: typeof(r) == 'undefined' [./array.as:953]
PASSED: tolen(r) == "[5, 5, 4, 2, 2, 0]" [./array.as:955]
PASSED: tolen(a) == "[5, 5, 4, 2, 2, 0]" [./array.as:956]
PASSED: tolen(a) == "[0, 2, 2, 4, 5, 5]" [./array.as:958]
PASSED: r.toString() == "0,1,2,3,4,5" [./array.as:960]
PASSED: r.toString() == "5,4,3,2,1,0" [./array.as:962]
PASSED: r.toString() == "" [./array.as:964]
PASSED: d.toString() == "" [./array.as:965]
PASSED: r.toString() == "" [./array.as:967]
PASSED: d.toString() == "" [./array.as:968]
PASSED: r.toString() == "singleton" [./array.as:970]
PASSED: e.toString() == "singleton" [./array.as:971]
PASSED: tolen(r) == "[5, 5, 4, 2, 2, 0]" [./array.as:975]
PASSED: tolen(a) == "[5, 5, 4, 2, 2, 0]" [./array.as:976]
PASSED: tolen(a) == "[0, 2, 2, 4, 5, 5]" [./array.as:978]
PASSED: r.toString() == "0,1,2,3,4,5" [./array.as:980]
PASSED: r.toString() == "5,4,3,2,1,0" [./array.as:982]
PASSED: e.toString() == "singleton" [./array.as:984]
PASSED: r.toString() == ",ED,Jedit,ed,emacs,nano,vi" [./array.as:993]
PASSED: a.toString() == ",ED,Jedit,ed,emacs,nano,vi" [./array.as:994]
PASSED: r.toString() == "0" [./array.as:996]
PASSED: a.toString() == ",ED,Jedit,ed,emacs,nano,vi" [./array.as:997]
PASSED: r.toString() == "0" [./array.as:999]
PASSED: a.toString() == ",ED,Jedit,ed,emacs,nano,vi" [./array.as:1000]
PASSED: r.toString() == "0,1,2,3,4,5,6" [./array.as:1002]
PASSED: r.toString() == "0" [./array.as:1004]
PASSED: r.toString() == "0" [./array.as:1007]
PASSED: b.toString() == "8,5,3,1,0,-2,-7,-9,3" [./array.as:1008]
PASSED: r.toString() == "0" [./array.as:1010]
PASSED: r.toString() == "0" [./array.as:1012]
PASSED: r.toString() == "0" [./array.as:1014]
PASSED: r.toString() == "0" [./array.as:1016]
PASSED: r.toString() == "0" [./array.as:1019]
PASSED: c.toString() == "Infinity,8.35,7.2,2,0.001,0,-0.5,-3.7,Infinity" [./array.as:1020]
PASSED: r.toString() == "0" [./array.as:1022]
PASSED: r.toString() == "0" [./array.as:1024]
PASSED: r.toString() == "0" [./array.as:1026]
PASSED: r.toString() == "0" [./array.as:1028]
PASSED: tolen(r) == "[0, 2, 2, 2, 4, 5, 5]" [./array.as:1030]
PASSED: tolen(a) == "[0, 2, 2, 2, 4, 5, 5]" [./array.as:1031]
PASSED: r.toString() == "0,1,2,3,4,5,6" [./array.as:1033]
PASSED: r.toString() == "6,5,4,3,2,1,0" [./array.as:1035]
PASSED: r.toString() == "-0.5,-3.7,0,0.001,2,7.2,8.35,Infinity,Infinity,null" [./array.as:1041]
PASSED: c.toString() == "-0.5,-3.7,0,0.001,2,7.2,8.35,Infinity,Infinity,null" [./array.as:1042]
PASSED: c.toString() == "-3.7,-0.5,0,0.001,2,7.2,8.35,Infinity,Infinity,null" [./array.as:1044]
PASSED: c.toString() == "null,Infinity,Infinity,8.35,7.2,2,0.001,0,-0.5,-3.7" [./array.as:1046]
PASSED: r.toString() == "9,8,7,6,5,4,3,1,2,0" [./array.as:1048]
PASSED: r.toString() == "0,1,2,3,4,5,6,7,9,8" [./array.as:1050]
PASSED: r.toString() == "0" [./array.as:1052]
PASSED: r.toString() == "0" [./array.as:1054]
PASSED: r.toString() == "0" [./array.as:1056]
PASSED: r.toString() == "0" [./array.as:1058]
PASSED: c.toString() == "-3.7,-0.5,0,0.001,2,7.2,8.35,Infinity,null,null" [./array.as:1063]
PASSED: c.toString() == "null,null,Infinity,8.35,7.2,2,0.001,0,-0.5,-3.7" [./array.as:1065]
PASSED: r.toString() == "9,8,7,6,5,4,3,2,0,1" [./array.as:1067]
PASSED: c.toString() == "null,null,Infinity,8.35,7.2,2,0.001,0,-0.5,-3.7" [./array.as:1068]
PASSED: r.toString() == "0" [./array.as:1070]
PASSED: r.toString() == "0" [./array.as:1072]
PASSED: r.toString() == "0" [./array.as:1077]
PASSED: r.toString() == "0" [./array.as:1079]
PASSED: r.toString() == "0" [./array.as:1084]
PASSED: r.toString() == "0" [./array.as:1086]
PASSED: tostr(r) == "Colossus,1943,true | ENIAC,1944,true | Zuse Z3,1941,false" [./array.as:1116]
PASSED: tostr(a) == "Colossus,1943,true | ENIAC,1944,true | Zuse Z3,1941,false" [./array.as:1117]
PASSED: tostr(r) == "Zuse Z3,1941,false | Colossus,1943,true | ENIAC,1944,true" [./array.as:1120]
PASSED: tostr(a) == "Zuse Z3,1941,false | Colossus,1943,true | ENIAC,1944,true" [./array.as:1121]
PASSED: tostr(a) == "Zuse Z3,1941,false | Colossus,1943,true | ENIAC,1944,true" [./array.as:1124]
PASSED: tostr(a) == "Zuse Z3,1941,false | Colossus,1943,true | ENIAC,1944,true" [./array.as:1127]
PASSED: tostr(a) == "ENIAC,1944,true | Colossus,1943,true | Zuse Z3,1941,false" [./array.as:1130]
PASSED: tostr(r) == "Zuse Z3,1941,false | Colossus,1943,true | ENIAC,1944,true" [./array.as:1133]
PASSED: tostr(a) == "Zuse Z3,1941,false | Colossus,1943,true | ENIAC,1944,true" [./array.as:1134]
PASSED: r.toString() == "0,1,2" [./array.as:1137]
PASSED: tostr(a) == "Zuse Z3,1941,false | Colossus,1943,true | ENIAC,1944,true" [./array.as:1138]
PASSED: tostr(r) == "Colossus,1943,true | ENIAC,1944,true | Zuse Z3,1941,false" [./array.as:1141]
PASSED: tostr(a) == "Colossus,1943,true | ENIAC,1944,true | Zuse Z3,1941,false" [./array.as:1142]
PASSED: tostr(r) == "Zuse Z3,1941,false | ENIAC,1944,true | Colossus,1943,true" [./array.as:1145]
PASSED: r.toString() == "2,1,0" [./array.as:1148]
PASSED: r.toString() == "0" [./array.as:1151]
PASSED: tostr(a) == "Zuse Z3,1941,false | ENIAC,1944,true | Colossus,1943,true" [./array.as:1152]
PASSED: tostr(r) == "Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true | Zuse Z3,1941,false" [./array.as:1158]
PASSED: tostr(a) == "Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true | Zuse Z3,1941,false" [./array.as:1159]
PASSED: tostr(a) == "Zuse Z3,1941,false | Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true" [./array.as:1162]
PASSED: tostr(a) == "Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true | Zuse Z3,1941,false" [./array.as:1165]
PASSED: tostr(r) == "Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true | Zuse Z3,1941,false" [./array.as:1168]
PASSED: tostr(r) == "Zuse Z3,1941,false | Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true" [./array.as:1171]
PASSED: tostr(r) == "Zuse Z3,1941,false | Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true" [./array.as:1176]
PASSED: tostr(a) == "Zuse Z3,1941,false | Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true" [./array.as:1177]
PASSED: tostr(a) == "Zuse Z3,1941,false | Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true" [./array.as:1180]
PASSED: tostr(a) == "Zuse Z3,1941,false | Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true" [./array.as:1183]
PASSED: tostr(a) == "Zuse Z3,1941,false | ENIAC,1944,true | Colossus,1943,true | Atanasoff-Berry,1941,true" [./array.as:1186]
PASSED: tostr(a) == "Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true | Zuse Z3,1941,false" [./array.as:1189]
PASSED: tostr(r) == "Zuse Z3,1941,false | Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true" [./array.as:1192]
PASSED: tostr(a) == "Zuse Z3,1941,false | Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true" [./array.as:1193]
PASSED: r.toString() == "0" [./array.as:1196]
PASSED: tostr(r) == "Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true | Zuse Z3,1941,false" [./array.as:1200]
PASSED: tostr(a) == "Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true | Zuse Z3,1941,false" [./array.as:1201]
PASSED: tostr(r) == "Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true | Zuse Z3,1941,false" [./array.as:1204]
PASSED: tostr(a) == "Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true | Zuse Z3,1941,false" [./array.as:1205]
PASSED: tostr(a) == "Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true | Zuse Z3,1941,false" [./array.as:1208]
PASSED: tostr(r) == "Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true | Zuse Z3,1941,false" [./array.as:1211]
PASSED: tostr(r) == "Zuse Z3,1941,false | ENIAC,1944,true | Colossus,1943,true | Atanasoff-Berry,1941,true" [./array.as:1215]
PASSED: tostr(a) == "Zuse Z3,1941,false | ENIAC,1944,true | Colossus,1943,true | Atanasoff-Berry,1941,true" [./array.as:1216]
PASSED: tostr(a) == "Atanasoff-Berry,1941,true | Zuse Z3,1941,false | Colossus,1943,true | ENIAC,1944,true" [./array.as:1219]
PASSED: tostr(a) == "ENIAC,1944,true | Colossus,1943,true | Atanasoff-Berry,1941,true | Zuse Z3,1941,false" [./array.as:1222]
PASSED: tostr(r) == "Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true | Zuse Z3,1941,false" [./array.as:1225]
PASSED: tostr(a) == "Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true | Zuse Z3,1941,false" [./array.as:1226]
PASSED: tostr(r) == "Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true | Zuse Z3,1941,false" [./array.as:1229]
PASSED: tostr(a) == "Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true | Zuse Z3,1941,false" [./array.as:1230]
PASSED: tostr(a) == "Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true | Zuse Z3,1941,false" [./array.as:1235]
PASSED: tostr(a) == "Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true | Zuse Z3,1941,false" [./array.as:1238]
PASSED: tostr(a) == "Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true | Zuse Z3,1941,false" [./array.as:1241]
PASSED: tostr(a) == "Zuse Z3,1941,false | Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true" [./array.as:1244]
PASSED: tostr(r) == "Name,Year,Year | Year,Name,Year" [./array.as:1249]
PASSED: tostr(b) == "Name,Year,Year | Year,Name,Year" [./array.as:1250]
PASSED: tostr(b) == "Year,Name,Year | Name,Year,Year" [./array.as:1252]
PASSED: tostr(b) == "Name,Year,Year | Year,Name,Year" [./array.as:1254]
PASSED: r == undefined [./array.as:1258]
PASSED: tostr(a) == "Zuse Z3,1941,false | Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true" [./array.as:1259]
PASSED: typeof(r) == 'object' [./array.as:1262]
PASSED: r instanceof Array [./array.as:1263]
PASSED: tostr(a) == "Zuse Z3,1941,false | Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true" [./array.as:1264]
PASSED: tostr(a) == "Zuse Z3,1941,false | Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true" [./array.as:1268]
PASSED: tostr(a) == "Harvard Mark I,1944,undefined | ENIAC,1944,true | Colossus,1943,true | Atanasoff-Berry,1941,true | Zuse Z3,1941,false" [./array.as:1283]
PASSED: tostr(a) == "Zuse Z3,1941,false | ENIAC,1944,true | Colossus,1943,true | Atanasoff-Berry,1941,true | Harvard Mark I,1944,undefined" [./array.as:1286]
PASSED: tostr(r) == "Zuse Z3,1941,false | Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true | Harvard Mark I,1944,undefined" [./array.as:1289]
PASSED: tostr(a) == "Zuse Z3,1941,false | Atanasoff-Berry,1941,true | Colossus,1943,true | ENIAC,1944,true | Harvard Mark I,1944,undefined" [./array.as:1290]
PASSED: tostr(a) == "Atanasoff-Berry,1941,true | Harvard Mark I,1944,undefined | Colossus,1943,true | ENIAC,1944,true | Zuse Z3,1941,false" [./array.as:1293]
PASSED: tostr(a) == "Atanasoff-Berry,1941,true | Harvard Mark I,1944,undefined | Zuse Z3,1941,false | Colossus,1943,true | ENIAC,1944,true" [./array.as:1296]
PASSED: tostr(a) == "Atanasoff-Berry,1941,true | Harvard Mark I,1944,undefined | Zuse Z3,1941,false | ENIAC,1944,true | Colossus,1943,true" [./array.as:1299]
PASSED: tostr(a) == "Zuse Z3,1941,false | Colossus,1943,true | ENIAC,1944,true | Atanasoff-Berry,1941,true | Harvard Mark I,1944,undefined" [./array.as:1302]
PASSED: r.toString() == "0,3,1,2,4" [./array.as:1305]
PASSED: typeof(i) == 'string' [./array.as:1317]
PASSED: typeof(i) == 'string' [./array.as:1317]
PASSED: typeof(i) == 'string' [./array.as:1317]
PASSED: out['len'] == 3 [./array.as:1321]
PASSED: out[0] == 1 [./array.as:1322]
PASSED: out[1] == 1 [./array.as:1323]
PASSED: out[2] == 1 [./array.as:1324]
PASSED: out['len'] == 0 [./array.as:1328]
PASSED: out['len'] == 0 [./array.as:1333]
PASSED: out['len'] == 1 [./array.as:1337]
PASSED: out[1] == 1 [./array.as:1338]
PASSED: out['len'] == 2 [./array.as:1342]
PASSED: out[1] == 1 [./array.as:1343]
PASSED: out[0] == 1 [./array.as:1344]
PASSED: a.length == 0 [./array.as:1351]
PASSED: a.length == 0 [./array.as:1353]
PASSED: a[-1] == 'minusone' [./array.as:1354]
PASSED: a.length == 0 [./array.as:1356]
PASSED: a["Infinite"] == 'inf' [./array.as:1357]
PASSED: ret == true [./array.as:1371]
PASSED: getCalls == 1 [./array.as:1374]
PASSED: setCalls == 0 [./array.as:1375]
PASSED: getCalls == 0 [./array.as:1378]
PASSED: setCalls == 1 [./array.as:1379]
PASSED: ret == true [./array.as:1382]
PASSED: getCalls == 1 [./array.as:1385]
PASSED: setCalls == 0 [./array.as:1386]
PASSED: getCalls == 0 [./array.as:1389]
PASSED: setCalls == 1 [./array.as:1390]
PASSED: a.length == 3 [./array.as:1392]
PASSED: a.length == 4 [./array.as:1394]
PASSED: getCalls == 0 [./array.as:1399]
PASSED: setCalls == 0 [./array.as:1400]
PASSED: a.length == 2 [./array.as:1412]
PASSED: a.length == 1 [./array.as:1414]
PASSED: f == 'zero' [./array.as:1415]
PASSED: a[0] == 'zero' [./array.as:1416]
PASSED: typeof(a[1]) == 'undefined' [./array.as:1417]
PASSED: !a.hasOwnProperty(1) [./array.as:1419]
PASSED: a.length == 2 [./array.as:1426]
PASSED: a.length == 1 [./array.as:1428]
PASSED: f == 'zero' [./array.as:1429]
PASSED: a[0] == 'one' [./array.as:1430]
PASSED: a[1] == 'one' [./array.as:1431]
PASSED: a.hasOwnProperty(0) [./array.as:1433]
PASSED: a.hasOwnProperty(1) [./array.as:1434]
PASSED: a.length == 2 [./array.as:1445]
PASSED: a[0] == 'zero' [./array.as:1447]
PASSED: a.length == 1 [./array.as:1449]
PASSED: f == 'zero' [./array.as:1450]
PASSED: a[0] == 'one' [./array.as:1451]
PASSED: typeof(a[1]) == 'undefined' [./array.as:1452]
PASSED: a[0] == 'overridden' [./array.as:1454]
PASSED: !a.hasOwnProperty(1) [./array.as:1456]
PASSED: a[1] == 'one' [./array.as:1465]
PASSED: a.length == 3 [./array.as:1466]
PASSED: a.length == 2 [./array.as:1468]
PASSED: f == 'zero' [./array.as:1469]
PASSED: a[0] == 'one' [./array.as:1470]
PASSED: a[1] == 'two' [./array.as:1471]
PASSED: typeof(a[2]) == 'undefined' [./array.as:1472]
PASSED: a[1] == 'overridden' [./array.as:1474]
PASSED: a.hasOwnProperty(0) [./array.as:1476]
PASSED: a.hasOwnProperty(1) [./array.as:1477]
PASSED: !a.hasOwnProperty(2) [./array.as:1478]
PASSED: traceProps(o) == "shift,length,7,6,5,4,3,2,1," [./array.as:1509]
PASSED: traceProps(o) == "4,3,2,1,0,shift,length,7,6,5," [./array.as:1513]
PASSED: o.length == 6 [./array.as:1514]
PASSED: traceProps(o) == "unshift,length,7,6,5,4,3,2,1," [./array.as:1520]
PASSED: traceProps(o) == "0,1,2,3,4,5,6,unshift,length,7," [./array.as:1524]
PASSED: o.length == 6 [./array.as:1525]
PASSED: traceProps(o) == "pop,length,7,6,5,4,3,2,1," [./array.as:1532]
PASSED: val == "five" [./array.as:1535]
PASSED: traceProps(o) == "pop,length,7,6,4,3,2,1," [./array.as:1537]
PASSED: o.length == 6 [./array.as:1538]
PASSED: traceProps(o) == "reverse,length,7,6,5,4,3,2,1," [./array.as:1545]
PASSED: traceProps(o) == "3,2,4,1,5,0,reverse,length,7,6," [./array.as:1550]
PASSED: o.length == 6 [./array.as:1551]
PASSED: traceProps(o) == "3,1,4,0,reverse,length,7,6,5,2," [./array.as:1559]
PASSED: o.length == 5 [./array.as:1560]
PASSED: traceProps(o) == "splice,length,7,6,5,4,3,2,1," [./array.as:1571]
PASSED: o.length == 6 [./array.as:1574]
PASSED: traceProps(o) == "0,splice,length,7,6,5,4,3,2,1," [./array.as:1577]
PASSED: o.length == 5 [./array.as:1578]
PASSED: o[2] == "new1" [./array.as:1581]
PASSED: o[3] == "new2" [./array.as:1582]
PASSED: o[0] == undefined [./array.as:1585]
PASSED: o[4] == "five" [./array.as:1588]
PASSED: traceProps(o) == "splice,length,7,6,5,4,3,2,1," [./array.as:1596]
PASSED: o.length == 6 [./array.as:1599]
PASSED: traceProps(o) == "8,0,splice,length,7,6,5,4,3,2,1," [./array.as:1602]
PASSED: o.length == 9 [./array.as:1603]
PASSED: o[2] == "new1" [./array.as:1606]
PASSED: o[3] == "new2" [./array.as:1607]
PASSED: o[4] == "new3" [./array.as:1608]
PASSED: o[5] == "new4" [./array.as:1609]
PASSED: o[0] == undefined [./array.as:1612]
PASSED: o[6] == "three" [./array.as:1615]
PASSED: traceProps(o) == "sort,length,7,6,5,4,3,2,1," [./array.as:1623]
PASSED: o.length == 6 [./array.as:1625]
PASSED: traceProps(o) == "5,4,2,1,0,sort,length,7,6,3," [./array.as:1628]
PASSED: traceProps(o) == "5,4,2,1,0,sort,length,7,6,3," [./array.as:1634]
PASSED: t[3] == "resolved 3" [./array.as:1653]
PASSED: rs == 1 [./array.as:1654]
PASSED: t[2] == "om" [./array.as:1657]
PASSED: t.join("/") == "zero/undefined/undefined/undefined/undefined/five" [./array.as:1661]
PASSED: rs == 1 [./array.as:1665]
PASSED: rs == 1 [./array.as:1669]
PASSED: rs == 1 [./array.as:1671]
PASSED: rescount == 0 [./array.as:1690]
PASSED: ret == "" [./array.as:1691]
PASSED: rescount == 0 [./array.as:1698]
PASSED: ret == "" [./array.as:1699]
creating new object
X ctor
PASSED: ret == "Array data" [./array.as:1710]
PASSED: this.length == undefined [./array.as:1722]
PASSED: backup == this [./array.as:1725]
FAILED: expected: 0 obtained: undefined [./array.as:1726]
FAILED: expected: 3 obtained: undefined [./array.as:1728]
FAILED: expected: 3 obtained: undefined [./array.as:1731]
FAILED: expected: 3 obtained: undefined [./array.as:1733]
PASSED: backup == this [./array.as:1739]
FAILED: expected: 0 obtained: undefined [./array.as:1740]
FAILED: expected: 3 obtained: undefined [./array.as:1742]
PASSED: backup == this [./array.as:1747]
FAILED: expected: 3 obtained: undefined [./array.as:1748]
FAILED: expected: 6 obtained: undefined [./array.as:1750]
PASSED: typeof(ar.constructor) == "undefined" [./array.as:1763]
PASSED: typeof(ar.constructor) == "function" [./array.as:1771]
PASSED: typeof(ar.__proto__) == "number" [./array.as:1772]
PASSED: ar.__proto__ == 8 [./array.as:1773]
PASSED: typeof(ar.__proto__) == "number" [./array.as:1777]
FAILED: expected: "undefined" obtained: object [./array.as:1784]
PASSED: typeof(ar.__proto__) == "undefined" [./array.as:1785]
PASSED: ar.__proto__ == undefined [./array.as:1786]
PASSED: typeof(ar.constructor) == "object" [./array.as:1791]
PASSED: typeof(ar.__proto__) == "string" [./array.as:1792]
PASSED: ar.__proto__ == "string" [./array.as:1793]
#passed: 637
#failed: 9
#total tests run: 646
