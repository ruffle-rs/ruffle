Test masks and dynamic masks at different depth ranges.
PASSED: staticmc2.getDepth()  ==  -16382 [masks_test.c:164]
PASSED: staticmc2.hitTest(10, 210, true) [masks_test.c:165]
PASSED: staticmc2.hitTest(50, 250, true) [masks_test.c:166]
PASSED: staticmc3.getDepth()  ==  -16381 [masks_test.c:169]
PASSED: staticmc3.hitTest(40, 210, true) [masks_test.c:170]
PASSED: staticmc3.hitTest(80, 250, true) [masks_test.c:171]
PASSED: staticmc4.getDepth()  ==  -16380 [masks_test.c:174]
PASSED: staticmc4.hitTest(210, 210, true) [masks_test.c:175]
PASSED: staticmc4.hitTest(250, 250, true) [masks_test.c:176]
PASSED: staticmc5.getDepth()  ==  -16379 [masks_test.c:179]
PASSED: staticmc5.hitTest(240, 210, true) [masks_test.c:180]
PASSED: staticmc5.hitTest(280, 250, true) [masks_test.c:181]
PASSED: dynamicmc2.getDepth()  ==  12 [masks_test.c:184]
PASSED: dynamicmc2.hitTest(10, 310, true) [masks_test.c:185]
PASSED: dynamicmc2.hitTest(50, 350, true) [masks_test.c:186]
PASSED: dynamicmc3.getDepth()  ==  13 [masks_test.c:189]
PASSED: dynamicmc3.hitTest(40, 310, true) [masks_test.c:190]
PASSED: dynamicmc3.hitTest(80, 350, true) [masks_test.c:191]
PASSED: dynamicmc4.getDepth()  ==  14 [masks_test.c:194]
PASSED: dynamicmc4.hitTest(210, 310, true) [masks_test.c:195]
PASSED: dynamicmc4.hitTest(250, 350, true) [masks_test.c:196]
PASSED: dynamicmc5.getDepth()  ==  15 [masks_test.c:199]
PASSED: dynamicmc5.hitTest(240, 310, true) [masks_test.c:200]
PASSED: dynamicmc5.hitTest(280, 350, true) [masks_test.c:201]
Placed staticmc2 (red), staticmc3 (yellow), staticmc4 (green), staticmc5 (cyan) DisplayObjects
Placed dynamicmc2 (blue), dynamicmc3 (violet), dynamicmc4 (dark green), dynamicmc5 (light blue) DisplayObjects
 - Press any key to continue -
staticmc2.setMask(staticmc3) [red masked by yellow]
staticmc5.setMask(staticmc4) [cyan masked by green]
dynamicmc2.setMask(dynamicmc3) [blue masked by violet
dynamicmc5.setMask(dynamicmc4) [light blue masked by dark green
PASSED: typeof(sm23)  ==  'boolean' [masks_test.c:229]
PASSED: sm23  ==  true [masks_test.c:230]
PASSED: typeof(sm54)  ==  'boolean' [masks_test.c:231]
PASSED: sm54  ==  true [masks_test.c:232]
PASSED: typeof(dm23)  ==  'boolean' [masks_test.c:233]
PASSED: dm23  ==  true [masks_test.c:234]
PASSED: typeof(dm54)  ==  'boolean' [masks_test.c:235]
PASSED: dm54  ==  true [masks_test.c:236]
PASSED: !staticmc2.hitTest(10, 210, true) [masks_test.c:241]
PASSED: staticmc2.hitTest(10, 210, false) [masks_test.c:242]
PASSED: staticmc2.hitTest(50, 250, true) [masks_test.c:243]
PASSED: staticmc3.hitTest(40, 210, false) [masks_test.c:248]
PASSED: staticmc3.hitTest(80, 250, false) [masks_test.c:249]
PASSED: !staticmc3.hitTest(40, 210, true) [masks_test.c:250]
PASSED: !staticmc3.hitTest(80, 250, true) [masks_test.c:251]
PASSED: !staticmc4.hitTest(210, 210, true) [masks_test.c:256]
PASSED: !staticmc4.hitTest(250, 250, true) [masks_test.c:257]
PASSED: staticmc4.hitTest(210, 210, false) [masks_test.c:258]
PASSED: staticmc4.hitTest(250, 250, false) [masks_test.c:259]
PASSED: staticmc5.hitTest(240, 210, true) [masks_test.c:264]
PASSED: !staticmc5.hitTest(280, 250, true) [masks_test.c:265]
PASSED: staticmc5.hitTest(280, 250, false) [masks_test.c:266]
PASSED: !dynamicmc2.hitTest(10, 310, true) [masks_test.c:271]
PASSED: dynamicmc2.hitTest(10, 310, false) [masks_test.c:272]
PASSED: dynamicmc2.hitTest(50, 350, true) [masks_test.c:273]
PASSED: !dynamicmc3.hitTest(40, 310, true) [masks_test.c:278]
PASSED: !dynamicmc3.hitTest(80, 350, true) [masks_test.c:279]
PASSED: dynamicmc3.hitTest(40, 310, false) [masks_test.c:280]
PASSED: dynamicmc3.hitTest(80, 350, false) [masks_test.c:281]
PASSED: !dynamicmc4.hitTest(210, 310, true) [masks_test.c:284]
PASSED: !dynamicmc4.hitTest(250, 350, true) [masks_test.c:285]
PASSED: dynamicmc4.hitTest(210, 310, false) [masks_test.c:286]
PASSED: dynamicmc4.hitTest(250, 350, false) [masks_test.c:287]
PASSED: dynamicmc5.hitTest(240, 310, true) [masks_test.c:292]
PASSED: !dynamicmc5.hitTest(280, 350, true) [masks_test.c:293]
PASSED: dynamicmc5.hitTest(280, 350, false) [masks_test.c:294]
 - Press any key to continue -
Swapped depths of chars 2/3 and 4/5 to see if masks are still in effect
 - Press any key to continue -
PASSED: staticmc2.getDepth()  ==  -16381 [masks_test.c:317]
PASSED: staticmc3.getDepth()  ==  -16382 [masks_test.c:318]
PASSED: staticmc4.getDepth()  ==  -16379 [masks_test.c:319]
PASSED: staticmc5.getDepth()  ==  -16380 [masks_test.c:320]
PASSED: dynamicmc2.getDepth()  ==  13 [masks_test.c:321]
PASSED: dynamicmc3.getDepth()  ==  12 [masks_test.c:322]
PASSED: dynamicmc4.getDepth()  ==  15 [masks_test.c:323]
PASSED: dynamicmc5.getDepth()  ==  14 [masks_test.c:324]
PASSED: !staticmc2.hitTest(10, 210, true) [masks_test.c:331]
PASSED: staticmc2.hitTest(10, 210, false) [masks_test.c:332]
PASSED: staticmc2.hitTest(50, 250, true) [masks_test.c:333]
PASSED: staticmc3.hitTest(40, 210, false) [masks_test.c:338]
PASSED: staticmc3.hitTest(80, 250, false) [masks_test.c:339]
PASSED: !staticmc3.hitTest(40, 210, true) [masks_test.c:340]
PASSED: !staticmc3.hitTest(80, 250, true) [masks_test.c:341]
PASSED: staticmc4.hitTest(210, 210, false) [masks_test.c:346]
PASSED: staticmc4.hitTest(250, 250, false) [masks_test.c:347]
PASSED: !staticmc4.hitTest(210, 210, true) [masks_test.c:348]
PASSED: !staticmc4.hitTest(250, 250, true) [masks_test.c:349]
PASSED: staticmc5.hitTest(240, 210, true) [masks_test.c:354]
PASSED: !staticmc5.hitTest(280, 250, true) [masks_test.c:355]
PASSED: staticmc5.hitTest(280, 250, false) [masks_test.c:356]
PASSED: !dynamicmc2.hitTest(10, 310, true) [masks_test.c:361]
PASSED: dynamicmc2.hitTest(10, 310, false) [masks_test.c:362]
PASSED: dynamicmc2.hitTest(50, 350, true) [masks_test.c:363]
PASSED: !dynamicmc3.hitTest(40, 310, true) [masks_test.c:368]
PASSED: !dynamicmc3.hitTest(80, 350, true) [masks_test.c:369]
PASSED: dynamicmc3.hitTest(40, 310, false) [masks_test.c:370]
PASSED: dynamicmc3.hitTest(80, 350, false) [masks_test.c:371]
PASSED: !dynamicmc4.hitTest(210, 310, true) [masks_test.c:374]
PASSED: !dynamicmc4.hitTest(250, 350, true) [masks_test.c:375]
PASSED: dynamicmc4.hitTest(210, 310, false) [masks_test.c:376]
PASSED: dynamicmc4.hitTest(250, 350, false) [masks_test.c:377]
PASSED: dynamicmc5.hitTest(240, 310, true) [masks_test.c:382]
PASSED: !dynamicmc5.hitTest(280, 350, true) [masks_test.c:383]
PASSED: dynamicmc5.hitTest(280, 350, false) [masks_test.c:384]
Swapped mask/maskee:
 staticmc3.setMask(staticmc2) [yellow masked by red]
 staticmc4.setMask(staticmc5) [green masked by cyan]
 dynamicmc3.setMask(dynamicmc4) [violet masked by blue
 dynamicmc4.setMask(dynamicmc5) [dark green masked by light blue
PASSED: typeof(sm32)  ==  'boolean' [masks_test.c:404]
PASSED: sm32  ==  true [masks_test.c:405]
PASSED: typeof(sm45)  ==  'boolean' [masks_test.c:406]
PASSED: sm45  ==  true [masks_test.c:407]
PASSED: typeof(dm32)  ==  'boolean' [masks_test.c:408]
PASSED: dm32  ==  true [masks_test.c:409]
PASSED: typeof(dm45)  ==  'boolean' [masks_test.c:410]
PASSED: dm45  ==  true [masks_test.c:411]
PASSED: !staticmc2.hitTest(10, 210, true) [masks_test.c:414]
PASSED: !staticmc2.hitTest(50, 250, true) [masks_test.c:415]
PASSED: staticmc2.hitTest(10, 210, false) [masks_test.c:416]
PASSED: staticmc2.hitTest(50, 250, false) [masks_test.c:417]
PASSED: !staticmc3.hitTest(40, 210, true) [masks_test.c:424]
PASSED: !staticmc3.hitTest(80, 250, true) [masks_test.c:425]
PASSED: staticmc3.hitTest(80, 250, false) [masks_test.c:426]
PASSED: staticmc3.hitTest(40, 210, false) [masks_test.c:427]
PASSED: !staticmc4.hitTest(210, 210, true) [masks_test.c:434]
PASSED: !staticmc4.hitTest(250, 250, true) [masks_test.c:435]
PASSED: staticmc4.hitTest(210, 210, false) [masks_test.c:436]
PASSED: staticmc4.hitTest(250, 250, false) [masks_test.c:437]
PASSED: !staticmc5.hitTest(240, 210, true) [masks_test.c:440]
PASSED: !staticmc5.hitTest(280, 250, true) [masks_test.c:441]
PASSED: staticmc5.hitTest(240, 210, false) [masks_test.c:442]
PASSED: staticmc5.hitTest(280, 250, false) [masks_test.c:443]
PASSED: !dynamicmc2.hitTest(10, 310, true) [masks_test.c:446]
PASSED: !dynamicmc2.hitTest(50, 350, true) [masks_test.c:447]
PASSED: dynamicmc2.hitTest(10, 310, false) [masks_test.c:448]
PASSED: dynamicmc2.hitTest(50, 350, false) [masks_test.c:449]
PASSED: dynamicmc3.hitTest(40, 310, true) [masks_test.c:452]
PASSED: !dynamicmc3.hitTest(80, 350, true) [masks_test.c:453]
PASSED: dynamicmc3.hitTest(80, 350, false) [masks_test.c:454]
PASSED: !dynamicmc4.hitTest(210, 310, true) [masks_test.c:457]
PASSED: dynamicmc4.hitTest(210, 310, false) [masks_test.c:458]
PASSED: dynamicmc4.hitTest(250, 350, true) [masks_test.c:459]
PASSED: dynamicmc5.hitTest(240, 310, false) [masks_test.c:462]
PASSED: dynamicmc5.hitTest(280, 350, false) [masks_test.c:463]
PASSED: !dynamicmc5.hitTest(240, 310, true) [masks_test.c:464]
PASSED: !dynamicmc5.hitTest(280, 350, true) [masks_test.c:465]
 - Press any key to continue -
Made all DisplayObjects mouse-sensitive
PASSED: staticmc2.hitTest(10, 210, true) [masks_test.c:484]
PASSED: staticmc2.hitTest(50, 250, true) [masks_test.c:485]
PASSED: staticmc3.hitTest(40, 210, true) [masks_test.c:491]
PASSED: !staticmc3.hitTest(80, 250, true) [masks_test.c:492]
PASSED: staticmc3.hitTest(80, 250, false) [masks_test.c:493]
PASSED: !staticmc4.hitTest(210, 210, true) [masks_test.c:499]
PASSED: staticmc4.hitTest(250, 250, true) [masks_test.c:500]
PASSED: staticmc4.hitTest(210, 210, false) [masks_test.c:501]
PASSED: staticmc5.hitTest(240, 210, true) [masks_test.c:504]
PASSED: staticmc5.hitTest(280, 250, true) [masks_test.c:505]
PASSED: dynamicmc2.hitTest(10, 310, true) [masks_test.c:508]
PASSED: dynamicmc2.hitTest(50, 350, true) [masks_test.c:509]
PASSED: dynamicmc3.hitTest(40, 310, true) [masks_test.c:512]
PASSED: !dynamicmc3.hitTest(80, 350, true) [masks_test.c:513]
PASSED: dynamicmc3.hitTest(80, 350, false) [masks_test.c:514]
PASSED: !dynamicmc4.hitTest(210, 310, true) [masks_test.c:517]
PASSED: dynamicmc4.hitTest(210, 310, false) [masks_test.c:518]
PASSED: dynamicmc4.hitTest(250, 350, true) [masks_test.c:519]
PASSED: dynamicmc5.hitTest(240, 310, true) [masks_test.c:522]
PASSED: dynamicmc5.hitTest(280, 350, true) [masks_test.c:523]
#passed: 154
#failed: 0
#total tests run: 154
